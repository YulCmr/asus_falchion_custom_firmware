ARM GAS  /tmp/ccuhTgxg.s 			page 1


   1              		.cpu cortex-m33
   2              		.arch armv8-m.main
   3              		.fpu fpv4-sp-d16
   4              		.arch_extension dsp
   5              		.eabi_attribute 27, 1
   6              		.eabi_attribute 28, 1
   7              		.eabi_attribute 20, 1
   8              		.eabi_attribute 21, 1
   9              		.eabi_attribute 23, 3
  10              		.eabi_attribute 24, 1
  11              		.eabi_attribute 25, 1
  12              		.eabi_attribute 26, 1
  13              		.eabi_attribute 30, 1
  14              		.eabi_attribute 34, 1
  15              		.eabi_attribute 18, 4
  16              		.file	"main.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.file 1 "Core/Src/main.c"
  21              		.section	.text.MX_GPIO_Init,"ax",%progbits
  22              		.align	1
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	MX_GPIO_Init:
  28              	.LFB162:
   1:Core/Src/main.c **** /**
   2:Core/Src/main.c ****   ******************************************************************************
   3:Core/Src/main.c ****   * @file           : main.c
   4:Core/Src/main.c ****   * @brief          : Main program body
   5:Core/Src/main.c ****   ******************************************************************************
   6:Core/Src/main.c ****   * @attention
   7:Core/Src/main.c ****   *
   8:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
   9:Core/Src/main.c ****   * All rights reserved.
  10:Core/Src/main.c ****   *
  11:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  12:Core/Src/main.c ****   * in the root directory of this software component.
  13:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  14:Core/Src/main.c ****   *
  15:Core/Src/main.c ****   ******************************************************************************
  16:Core/Src/main.c ****   */
  17:Core/Src/main.c **** 
  18:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  19:Core/Src/main.c **** #include "main.h"
  20:Core/Src/main.c **** 
  21:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** //#define SYS_MEM_START_ADDR	0x0BF90000
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
ARM GAS  /tmp/ccuhTgxg.s 			page 2


  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  33:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  34:Core/Src/main.c **** I2C_HandleTypeDef hi2c2;
  35:Core/Src/main.c **** UART_HandleTypeDef huart3;
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** // void (*boot_jump)(void);
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  41:Core/Src/main.c **** void SystemClock_Config(void);
  42:Core/Src/main.c **** static void MX_GPIO_Init(void);
  43:Core/Src/main.c **** static void MX_I2C1_Init(void);
  44:Core/Src/main.c **** static void MX_I2C2_Init(void);
  45:Core/Src/main.c **** static void MX_USART3_UART_Init(void);
  46:Core/Src/main.c **** static void MX_ICACHE_Init(void);
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** extern const uint32_t ledmaps[][DRIVER_LED_TOTAL];
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /**
  53:Core/Src/main.c ****   * @brief  The application entry point.
  54:Core/Src/main.c ****   * @retval int
  55:Core/Src/main.c ****   */
  56:Core/Src/main.c **** int main(void)
  57:Core/Src/main.c **** {
  58:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  59:Core/Src/main.c **** 
  60:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  61:Core/Src/main.c ****   HAL_Init();
  62:Core/Src/main.c **** 
  63:Core/Src/main.c ****   /* Configure the system clock */
  64:Core/Src/main.c ****   SystemClock_Config();
  65:Core/Src/main.c **** 
  66:Core/Src/main.c ****   /* DFU BL Jump. May be useless in the end ... We'll decide later ! */
  67:Core/Src/main.c ****   // HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_SET);
  68:Core/Src/main.c ****   // HAL_Delay(1);
  69:Core/Src/main.c ****   // if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_0 == GPIO_PIN_SET)) {
  70:Core/Src/main.c ****   //   HAL_DeInit();
  71:Core/Src/main.c ****   //   boot_jump = (void (*)(void))(*((uint32_t *)(SYS_MEM_START_ADDR + 4)));
  72:Core/Src/main.c ****   //   __set_MSP(*(__IO uint32_t*)SYS_MEM_START_ADDR);
  73:Core/Src/main.c ****   //
  74:Core/Src/main.c ****   //   boot_jump();
  75:Core/Src/main.c ****   // }
  76:Core/Src/main.c ****   // HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_RESET);
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****   /* Initialize all configured peripherals */
  79:Core/Src/main.c ****   MX_GPIO_Init();
  80:Core/Src/main.c ****   MX_ICACHE_Init();
  81:Core/Src/main.c ****   // MX_I2C1_Init();
  82:Core/Src/main.c ****   MX_I2C2_Init();
  83:Core/Src/main.c ****   // MX_USART3_UART_Init();
  84:Core/Src/main.c ****   MX_USB_Device_Init();
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* Init RGB Matrixes */
  87:Core/Src/main.c ****   IS31FL3737_init(161);
ARM GAS  /tmp/ccuhTgxg.s 			page 3


  88:Core/Src/main.c ****   IS31FL3737_init(191);
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   if(ledbar_animation_is_enabled() == true) ledbar_animate();
  91:Core/Src/main.c ****   load_led_pattern(get_led_pattern());
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* Infinite loop */
  94:Core/Src/main.c ****   while (1)
  95:Core/Src/main.c ****   {
  96:Core/Src/main.c ****     scan_matrix();
  97:Core/Src/main.c ****     IS31FL3737_update_pwm_buffers(161, 191);
  98:Core/Src/main.c ****     if(ledbar_animation_is_enabled() == true) ledbar_animate();
  99:Core/Src/main.c ****   }
 100:Core/Src/main.c **** }
 101:Core/Src/main.c **** 
 102:Core/Src/main.c **** /**
 103:Core/Src/main.c ****   * @brief System Clock Configuration
 104:Core/Src/main.c ****   * @retval None
 105:Core/Src/main.c ****   */
 106:Core/Src/main.c **** void SystemClock_Config(void)
 107:Core/Src/main.c **** {
 108:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 109:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 112:Core/Src/main.c ****   */
 113:Core/Src/main.c ****   if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE0) != HAL_OK)
 114:Core/Src/main.c ****   {
 115:Core/Src/main.c ****     Error_Handler();
 116:Core/Src/main.c ****   }
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 119:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 120:Core/Src/main.c ****   */
 121:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 122:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 123:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 124:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 125:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 2;
 126:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 12;
 127:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 128:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 129:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 130:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 131:Core/Src/main.c ****   {
 132:Core/Src/main.c ****     Error_Handler();
 133:Core/Src/main.c ****   }
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 136:Core/Src/main.c ****   */
 137:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 138:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 139:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 140:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 141:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 142:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
ARM GAS  /tmp/ccuhTgxg.s 			page 4


 145:Core/Src/main.c ****   {
 146:Core/Src/main.c ****     Error_Handler();
 147:Core/Src/main.c ****   }
 148:Core/Src/main.c **** }
 149:Core/Src/main.c **** 
 150:Core/Src/main.c **** /**
 151:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 152:Core/Src/main.c ****   * @param None
 153:Core/Src/main.c ****   * @retval None
 154:Core/Src/main.c ****   */
 155:Core/Src/main.c **** static void MX_I2C1_Init(void)
 156:Core/Src/main.c **** {
 157:Core/Src/main.c **** 
 158:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 159:Core/Src/main.c **** 
 160:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 161:Core/Src/main.c **** 
 162:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 163:Core/Src/main.c **** 
 164:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 165:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 166:Core/Src/main.c ****   hi2c1.Init.Timing = 0x10B0DCFB;
 167:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 168:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 169:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 170:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 171:Core/Src/main.c ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 172:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 173:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 174:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 175:Core/Src/main.c ****   {
 176:Core/Src/main.c ****     Error_Handler();
 177:Core/Src/main.c ****   }
 178:Core/Src/main.c **** 
 179:Core/Src/main.c ****   /** Configure Analogue filter
 180:Core/Src/main.c ****   */
 181:Core/Src/main.c ****   if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 182:Core/Src/main.c ****   {
 183:Core/Src/main.c ****     Error_Handler();
 184:Core/Src/main.c ****   }
 185:Core/Src/main.c **** 
 186:Core/Src/main.c ****   /** Configure Digital filter
 187:Core/Src/main.c ****   */
 188:Core/Src/main.c ****   if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 189:Core/Src/main.c ****   {
 190:Core/Src/main.c ****     Error_Handler();
 191:Core/Src/main.c ****   }
 192:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 193:Core/Src/main.c **** 
 194:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 195:Core/Src/main.c **** 
 196:Core/Src/main.c **** }
 197:Core/Src/main.c **** 
 198:Core/Src/main.c **** /**
 199:Core/Src/main.c ****   * @brief I2C2 Initialization Function
 200:Core/Src/main.c ****   * @param None
 201:Core/Src/main.c ****   * @retval None
ARM GAS  /tmp/ccuhTgxg.s 			page 5


 202:Core/Src/main.c ****   */
 203:Core/Src/main.c **** static void MX_I2C2_Init(void)
 204:Core/Src/main.c **** {
 205:Core/Src/main.c **** 
 206:Core/Src/main.c ****   /* USER CODE BEGIN I2C2_Init 0 */
 207:Core/Src/main.c **** 
 208:Core/Src/main.c ****   /* USER CODE END I2C2_Init 0 */
 209:Core/Src/main.c **** 
 210:Core/Src/main.c ****   /* USER CODE BEGIN I2C2_Init 1 */
 211:Core/Src/main.c **** 
 212:Core/Src/main.c ****   /* USER CODE END I2C2_Init 1 */
 213:Core/Src/main.c ****   hi2c2.Instance = I2C2;
 214:Core/Src/main.c ****   hi2c2.Init.Timing = 0x0040163A; //0x10B0DCFB
 215:Core/Src/main.c ****   hi2c2.Init.OwnAddress1 = 0;
 216:Core/Src/main.c ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 217:Core/Src/main.c ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 218:Core/Src/main.c ****   hi2c2.Init.OwnAddress2 = 0;
 219:Core/Src/main.c ****   hi2c2.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 220:Core/Src/main.c ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 221:Core/Src/main.c ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 222:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 223:Core/Src/main.c ****   {
 224:Core/Src/main.c ****     Error_Handler();
 225:Core/Src/main.c ****   }
 226:Core/Src/main.c **** 
 227:Core/Src/main.c ****   /** Configure Analogue filter
 228:Core/Src/main.c ****   */
 229:Core/Src/main.c ****   if (HAL_I2CEx_ConfigAnalogFilter(&hi2c2, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 230:Core/Src/main.c ****   {
 231:Core/Src/main.c ****     Error_Handler();
 232:Core/Src/main.c ****   }
 233:Core/Src/main.c **** 
 234:Core/Src/main.c ****   /** Configure Digital filter
 235:Core/Src/main.c ****   */
 236:Core/Src/main.c ****   if (HAL_I2CEx_ConfigDigitalFilter(&hi2c2, 0) != HAL_OK)
 237:Core/Src/main.c ****   {
 238:Core/Src/main.c ****     Error_Handler();
 239:Core/Src/main.c ****   }
 240:Core/Src/main.c **** 
 241:Core/Src/main.c ****   HAL_I2CEx_EnableFastModePlus(I2C_FASTMODEPLUS_I2C2);
 242:Core/Src/main.c ****   /* USER CODE BEGIN I2C2_Init 2 */
 243:Core/Src/main.c **** 
 244:Core/Src/main.c ****   /* USER CODE END I2C2_Init 2 */
 245:Core/Src/main.c **** 
 246:Core/Src/main.c **** }
 247:Core/Src/main.c **** 
 248:Core/Src/main.c **** /**
 249:Core/Src/main.c ****   * @brief ICACHE Initialization Function
 250:Core/Src/main.c ****   * @param None
 251:Core/Src/main.c ****   * @retval None
 252:Core/Src/main.c ****   */
 253:Core/Src/main.c **** static void MX_ICACHE_Init(void)
 254:Core/Src/main.c **** {
 255:Core/Src/main.c **** 
 256:Core/Src/main.c ****   /* USER CODE BEGIN ICACHE_Init 0 */
 257:Core/Src/main.c **** 
 258:Core/Src/main.c ****   /* USER CODE END ICACHE_Init 0 */
ARM GAS  /tmp/ccuhTgxg.s 			page 6


 259:Core/Src/main.c **** 
 260:Core/Src/main.c ****   /* USER CODE BEGIN ICACHE_Init 1 */
 261:Core/Src/main.c **** 
 262:Core/Src/main.c ****   /* USER CODE END ICACHE_Init 1 */
 263:Core/Src/main.c **** 
 264:Core/Src/main.c ****   /** Enable instruction cache in 1-way (direct mapped cache)
 265:Core/Src/main.c ****   */
 266:Core/Src/main.c ****   if (HAL_ICACHE_ConfigAssociativityMode(ICACHE_1WAY) != HAL_OK)
 267:Core/Src/main.c ****   {
 268:Core/Src/main.c ****     Error_Handler();
 269:Core/Src/main.c ****   }
 270:Core/Src/main.c ****   if (HAL_ICACHE_Enable() != HAL_OK)
 271:Core/Src/main.c ****   {
 272:Core/Src/main.c ****     Error_Handler();
 273:Core/Src/main.c ****   }
 274:Core/Src/main.c ****   /* USER CODE BEGIN ICACHE_Init 2 */
 275:Core/Src/main.c **** 
 276:Core/Src/main.c ****   /* USER CODE END ICACHE_Init 2 */
 277:Core/Src/main.c **** 
 278:Core/Src/main.c **** }
 279:Core/Src/main.c **** 
 280:Core/Src/main.c **** /**
 281:Core/Src/main.c ****   * @brief USART3 Initialization Function
 282:Core/Src/main.c ****   * @param None
 283:Core/Src/main.c ****   * @retval None
 284:Core/Src/main.c ****   */
 285:Core/Src/main.c **** static void MX_USART3_UART_Init(void)
 286:Core/Src/main.c **** {
 287:Core/Src/main.c **** 
 288:Core/Src/main.c ****   /* USER CODE BEGIN USART3_Init 0 */
 289:Core/Src/main.c **** 
 290:Core/Src/main.c ****   /* USER CODE END USART3_Init 0 */
 291:Core/Src/main.c **** 
 292:Core/Src/main.c ****   /* USER CODE BEGIN USART3_Init 1 */
 293:Core/Src/main.c **** 
 294:Core/Src/main.c ****   /* USER CODE END USART3_Init 1 */
 295:Core/Src/main.c ****   huart3.Instance = USART3;
 296:Core/Src/main.c ****   huart3.Init.BaudRate = 115200;
 297:Core/Src/main.c ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 298:Core/Src/main.c ****   huart3.Init.StopBits = UART_STOPBITS_1;
 299:Core/Src/main.c ****   huart3.Init.Parity = UART_PARITY_NONE;
 300:Core/Src/main.c ****   huart3.Init.Mode = UART_MODE_TX_RX;
 301:Core/Src/main.c ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 302:Core/Src/main.c ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 303:Core/Src/main.c ****   huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 304:Core/Src/main.c ****   huart3.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 305:Core/Src/main.c ****   huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 306:Core/Src/main.c ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 307:Core/Src/main.c ****   {
 308:Core/Src/main.c ****     Error_Handler();
 309:Core/Src/main.c ****   }
 310:Core/Src/main.c ****   if (HAL_UARTEx_SetTxFifoThreshold(&huart3, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 311:Core/Src/main.c ****   {
 312:Core/Src/main.c ****     Error_Handler();
 313:Core/Src/main.c ****   }
 314:Core/Src/main.c ****   if (HAL_UARTEx_SetRxFifoThreshold(&huart3, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 315:Core/Src/main.c ****   {
ARM GAS  /tmp/ccuhTgxg.s 			page 7


 316:Core/Src/main.c ****     Error_Handler();
 317:Core/Src/main.c ****   }
 318:Core/Src/main.c ****   if (HAL_UARTEx_DisableFifoMode(&huart3) != HAL_OK)
 319:Core/Src/main.c ****   {
 320:Core/Src/main.c ****     Error_Handler();
 321:Core/Src/main.c ****   }
 322:Core/Src/main.c ****   /* USER CODE BEGIN USART3_Init 2 */
 323:Core/Src/main.c **** 
 324:Core/Src/main.c ****   /* USER CODE END USART3_Init 2 */
 325:Core/Src/main.c **** 
 326:Core/Src/main.c **** }
 327:Core/Src/main.c **** 
 328:Core/Src/main.c **** /**
 329:Core/Src/main.c ****   * @brief GPIO Initialization Function
 330:Core/Src/main.c ****   * @param None
 331:Core/Src/main.c ****   * @retval None
 332:Core/Src/main.c ****   */
 333:Core/Src/main.c **** static void MX_GPIO_Init(void)
 334:Core/Src/main.c **** {
  29              		.loc 1 334 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 40
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 24
  36              		.cfi_offset 4, -24
  37              		.cfi_offset 5, -20
  38              		.cfi_offset 6, -16
  39              		.cfi_offset 7, -12
  40              		.cfi_offset 8, -8
  41              		.cfi_offset 14, -4
  42 0004 8AB0     		sub	sp, sp, #40
  43              	.LCFI1:
  44              		.cfi_def_cfa_offset 64
 335:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  45              		.loc 1 335 3 view .LVU1
  46              		.loc 1 335 20 is_stmt 0 view .LVU2
  47 0006 0024     		movs	r4, #0
  48 0008 0594     		str	r4, [sp, #20]
  49 000a 0694     		str	r4, [sp, #24]
  50 000c 0794     		str	r4, [sp, #28]
  51 000e 0894     		str	r4, [sp, #32]
  52 0010 0994     		str	r4, [sp, #36]
 336:Core/Src/main.c **** 
 337:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 338:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  53              		.loc 1 338 3 is_stmt 1 view .LVU3
  54              	.LBB4:
  55              		.loc 1 338 3 view .LVU4
  56              		.loc 1 338 3 view .LVU5
  57 0012 364B     		ldr	r3, .L3
  58 0014 DA6C     		ldr	r2, [r3, #76]
  59 0016 42F00402 		orr	r2, r2, #4
  60 001a DA64     		str	r2, [r3, #76]
  61              		.loc 1 338 3 view .LVU6
  62 001c DA6C     		ldr	r2, [r3, #76]
ARM GAS  /tmp/ccuhTgxg.s 			page 8


  63 001e 02F00402 		and	r2, r2, #4
  64 0022 0192     		str	r2, [sp, #4]
  65              		.loc 1 338 3 view .LVU7
  66 0024 019A     		ldr	r2, [sp, #4]
  67              	.LBE4:
  68              		.loc 1 338 3 view .LVU8
 339:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  69              		.loc 1 339 3 view .LVU9
  70              	.LBB5:
  71              		.loc 1 339 3 view .LVU10
  72              		.loc 1 339 3 view .LVU11
  73 0026 DA6C     		ldr	r2, [r3, #76]
  74 0028 42F08002 		orr	r2, r2, #128
  75 002c DA64     		str	r2, [r3, #76]
  76              		.loc 1 339 3 view .LVU12
  77 002e DA6C     		ldr	r2, [r3, #76]
  78 0030 02F08002 		and	r2, r2, #128
  79 0034 0292     		str	r2, [sp, #8]
  80              		.loc 1 339 3 view .LVU13
  81 0036 029A     		ldr	r2, [sp, #8]
  82              	.LBE5:
  83              		.loc 1 339 3 view .LVU14
 340:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  84              		.loc 1 340 3 view .LVU15
  85              	.LBB6:
  86              		.loc 1 340 3 view .LVU16
  87              		.loc 1 340 3 view .LVU17
  88 0038 DA6C     		ldr	r2, [r3, #76]
  89 003a 42F00102 		orr	r2, r2, #1
  90 003e DA64     		str	r2, [r3, #76]
  91              		.loc 1 340 3 view .LVU18
  92 0040 DA6C     		ldr	r2, [r3, #76]
  93 0042 02F00102 		and	r2, r2, #1
  94 0046 0392     		str	r2, [sp, #12]
  95              		.loc 1 340 3 view .LVU19
  96 0048 039A     		ldr	r2, [sp, #12]
  97              	.LBE6:
  98              		.loc 1 340 3 view .LVU20
 341:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  99              		.loc 1 341 3 view .LVU21
 100              	.LBB7:
 101              		.loc 1 341 3 view .LVU22
 102              		.loc 1 341 3 view .LVU23
 103 004a DA6C     		ldr	r2, [r3, #76]
 104 004c 42F00202 		orr	r2, r2, #2
 105 0050 DA64     		str	r2, [r3, #76]
 106              		.loc 1 341 3 view .LVU24
 107 0052 DB6C     		ldr	r3, [r3, #76]
 108 0054 03F00203 		and	r3, r3, #2
 109 0058 0493     		str	r3, [sp, #16]
 110              		.loc 1 341 3 view .LVU25
 111 005a 049B     		ldr	r3, [sp, #16]
 112              	.LBE7:
 113              		.loc 1 341 3 view .LVU26
 342:Core/Src/main.c **** 
 343:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 344:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, row_0_Pin|row_1_Pin|row_2_Pin|row_3_Pin
ARM GAS  /tmp/ccuhTgxg.s 			page 9


 114              		.loc 1 344 3 view .LVU27
 115 005c DFF89880 		ldr	r8, .L3+12
 116 0060 2246     		mov	r2, r4
 117 0062 3F21     		movs	r1, #63
 118 0064 4046     		mov	r0, r8
 119 0066 FFF7FEFF 		bl	HAL_GPIO_WritePin
 120              	.LVL0:
 345:Core/Src/main.c ****                           |row_4_Pin|row_5_Pin, GPIO_PIN_RESET);
 346:Core/Src/main.c **** 
 347:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, matrix_Pin, GPIO_PIN_SET);
 121              		.loc 1 347 3 view .LVU28
 122 006a 214D     		ldr	r5, .L3+4
 123 006c 0122     		movs	r2, #1
 124 006e 4FF48051 		mov	r1, #4096
 125 0072 2846     		mov	r0, r5
 126 0074 FFF7FEFF 		bl	HAL_GPIO_WritePin
 127              	.LVL1:
 348:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1, GPIO_PIN_SET);
 128              		.loc 1 348 3 view .LVU29
 129 0078 0122     		movs	r2, #1
 130 007a 0321     		movs	r1, #3
 131 007c 2846     		mov	r0, r5
 132 007e FFF7FEFF 		bl	HAL_GPIO_WritePin
 133              	.LVL2:
 349:Core/Src/main.c **** 
 350:Core/Src/main.c ****   /*Configure GPIO pins : col_13_Pin col_0_Pin col_1_Pin col_2_Pin
 351:Core/Src/main.c ****                            col_3_Pin col_4_Pin col_5_Pin col_6_Pin
 352:Core/Src/main.c ****                            col_7_Pin col_8_Pin col_9_Pin col_10_Pin
 353:Core/Src/main.c ****                            col_11_Pin col_12_Pin */
 354:Core/Src/main.c ****   GPIO_InitStruct.Pin = col_13_Pin|col_0_Pin|col_1_Pin|col_2_Pin
 134              		.loc 1 354 3 view .LVU30
 135              		.loc 1 354 23 is_stmt 0 view .LVU31
 136 0082 43F6FF73 		movw	r3, #16383
 137 0086 0593     		str	r3, [sp, #20]
 355:Core/Src/main.c ****                           |col_3_Pin|col_4_Pin|col_5_Pin|col_6_Pin
 356:Core/Src/main.c ****                           |col_7_Pin|col_8_Pin|col_9_Pin|col_10_Pin
 357:Core/Src/main.c ****                           |col_11_Pin|col_12_Pin;
 358:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 138              		.loc 1 358 3 is_stmt 1 view .LVU32
 139              		.loc 1 358 24 is_stmt 0 view .LVU33
 140 0088 0694     		str	r4, [sp, #24]
 359:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 141              		.loc 1 359 3 is_stmt 1 view .LVU34
 142              		.loc 1 359 24 is_stmt 0 view .LVU35
 143 008a 0226     		movs	r6, #2
 144 008c 0796     		str	r6, [sp, #28]
 360:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 145              		.loc 1 360 3 is_stmt 1 view .LVU36
 146 008e 194F     		ldr	r7, .L3+8
 147 0090 05A9     		add	r1, sp, #20
 148 0092 3846     		mov	r0, r7
 149 0094 FFF7FEFF 		bl	HAL_GPIO_Init
 150              	.LVL3:
 361:Core/Src/main.c **** 
 362:Core/Src/main.c ****   /*Configure GPIO pin : reset_radio_Pin */
 363:Core/Src/main.c ****   GPIO_InitStruct.Pin = reset_radio_Pin;
 151              		.loc 1 363 3 view .LVU37
ARM GAS  /tmp/ccuhTgxg.s 			page 10


 152              		.loc 1 363 23 is_stmt 0 view .LVU38
 153 0098 4FF40043 		mov	r3, #32768
 154 009c 0593     		str	r3, [sp, #20]
 364:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 155              		.loc 1 364 3 is_stmt 1 view .LVU39
 156              		.loc 1 364 24 is_stmt 0 view .LVU40
 157 009e 0694     		str	r4, [sp, #24]
 365:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 158              		.loc 1 365 3 is_stmt 1 view .LVU41
 159              		.loc 1 365 24 is_stmt 0 view .LVU42
 160 00a0 0794     		str	r4, [sp, #28]
 366:Core/Src/main.c ****   HAL_GPIO_Init(reset_radio_GPIO_Port, &GPIO_InitStruct);
 161              		.loc 1 366 3 is_stmt 1 view .LVU43
 162 00a2 05A9     		add	r1, sp, #20
 163 00a4 3846     		mov	r0, r7
 164 00a6 FFF7FEFF 		bl	HAL_GPIO_Init
 165              	.LVL4:
 367:Core/Src/main.c **** 
 368:Core/Src/main.c ****   /*Configure GPIO pins : row_0_Pin row_1_Pin row_2_Pin row_3_Pin
 369:Core/Src/main.c ****                            row_4_Pin row_5_Pin */
 370:Core/Src/main.c ****   GPIO_InitStruct.Pin = row_0_Pin|row_1_Pin|row_2_Pin|row_3_Pin
 166              		.loc 1 370 3 view .LVU44
 167              		.loc 1 370 23 is_stmt 0 view .LVU45
 168 00aa 3F23     		movs	r3, #63
 169 00ac 0593     		str	r3, [sp, #20]
 371:Core/Src/main.c ****                           |row_4_Pin|row_5_Pin;
 372:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 170              		.loc 1 372 3 is_stmt 1 view .LVU46
 171              		.loc 1 372 24 is_stmt 0 view .LVU47
 172 00ae 0127     		movs	r7, #1
 173 00b0 0697     		str	r7, [sp, #24]
 373:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 174              		.loc 1 373 3 is_stmt 1 view .LVU48
 175              		.loc 1 373 24 is_stmt 0 view .LVU49
 176 00b2 0796     		str	r6, [sp, #28]
 374:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 177              		.loc 1 374 3 is_stmt 1 view .LVU50
 178              		.loc 1 374 25 is_stmt 0 view .LVU51
 179 00b4 0326     		movs	r6, #3
 180 00b6 0896     		str	r6, [sp, #32]
 375:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 181              		.loc 1 375 3 is_stmt 1 view .LVU52
 182 00b8 05A9     		add	r1, sp, #20
 183 00ba 4046     		mov	r0, r8
 184 00bc FFF7FEFF 		bl	HAL_GPIO_Init
 185              	.LVL5:
 376:Core/Src/main.c **** 
 377:Core/Src/main.c ****   /*Configure GPIO pin : matrix_Pin */
 378:Core/Src/main.c ****   GPIO_InitStruct.Pin = matrix_Pin;
 186              		.loc 1 378 3 view .LVU53
 187              		.loc 1 378 23 is_stmt 0 view .LVU54
 188 00c0 4FF48053 		mov	r3, #4096
 189 00c4 0593     		str	r3, [sp, #20]
 379:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 190              		.loc 1 379 3 is_stmt 1 view .LVU55
 191              		.loc 1 379 24 is_stmt 0 view .LVU56
 192 00c6 0697     		str	r7, [sp, #24]
ARM GAS  /tmp/ccuhTgxg.s 			page 11


 380:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 193              		.loc 1 380 3 is_stmt 1 view .LVU57
 194              		.loc 1 380 24 is_stmt 0 view .LVU58
 195 00c8 0797     		str	r7, [sp, #28]
 381:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 196              		.loc 1 381 3 is_stmt 1 view .LVU59
 197              		.loc 1 381 25 is_stmt 0 view .LVU60
 198 00ca 0896     		str	r6, [sp, #32]
 382:Core/Src/main.c ****   HAL_GPIO_Init(matrix_GPIO_Port, &GPIO_InitStruct);
 199              		.loc 1 382 3 is_stmt 1 view .LVU61
 200 00cc 05A9     		add	r1, sp, #20
 201 00ce 2846     		mov	r0, r5
 202 00d0 FFF7FEFF 		bl	HAL_GPIO_Init
 203              	.LVL6:
 383:Core/Src/main.c **** 
 384:Core/Src/main.c ****   /*Configure GPIO pin : Caps lock & GUI Lock leds */
 385:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0 | GPIO_PIN_1;
 204              		.loc 1 385 3 view .LVU62
 205              		.loc 1 385 23 is_stmt 0 view .LVU63
 206 00d4 0596     		str	r6, [sp, #20]
 386:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 207              		.loc 1 386 3 is_stmt 1 view .LVU64
 208              		.loc 1 386 24 is_stmt 0 view .LVU65
 209 00d6 0697     		str	r7, [sp, #24]
 387:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 210              		.loc 1 387 3 is_stmt 1 view .LVU66
 211              		.loc 1 387 24 is_stmt 0 view .LVU67
 212 00d8 0794     		str	r4, [sp, #28]
 388:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 213              		.loc 1 388 3 is_stmt 1 view .LVU68
 214              		.loc 1 388 25 is_stmt 0 view .LVU69
 215 00da 0896     		str	r6, [sp, #32]
 389:Core/Src/main.c ****   HAL_GPIO_Init(matrix_GPIO_Port, &GPIO_InitStruct);
 216              		.loc 1 389 3 is_stmt 1 view .LVU70
 217 00dc 05A9     		add	r1, sp, #20
 218 00de 2846     		mov	r0, r5
 219 00e0 FFF7FEFF 		bl	HAL_GPIO_Init
 220              	.LVL7:
 390:Core/Src/main.c **** 
 391:Core/Src/main.c **** }
 221              		.loc 1 391 1 is_stmt 0 view .LVU71
 222 00e4 0AB0     		add	sp, sp, #40
 223              	.LCFI2:
 224              		.cfi_def_cfa_offset 24
 225              		@ sp needed
 226 00e6 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 227              	.L4:
 228 00ea 00BF     		.align	2
 229              	.L3:
 230 00ec 00100240 		.word	1073876992
 231 00f0 00040242 		.word	1107428352
 232 00f4 00080242 		.word	1107429376
 233 00f8 00000242 		.word	1107427328
 234              		.cfi_endproc
 235              	.LFE162:
 237              		.section	.text.Error_Handler,"ax",%progbits
 238              		.align	1
ARM GAS  /tmp/ccuhTgxg.s 			page 12


 239              		.global	Error_Handler
 240              		.syntax unified
 241              		.thumb
 242              		.thumb_func
 244              	Error_Handler:
 245              	.LFB163:
 392:Core/Src/main.c **** 
 393:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 394:Core/Src/main.c **** 
 395:Core/Src/main.c **** /* USER CODE END 4 */
 396:Core/Src/main.c **** 
 397:Core/Src/main.c **** /**
 398:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 399:Core/Src/main.c ****   * @retval None
 400:Core/Src/main.c ****   */
 401:Core/Src/main.c **** void Error_Handler(void)
 402:Core/Src/main.c **** {
 246              		.loc 1 402 1 is_stmt 1 view -0
 247              		.cfi_startproc
 248              		@ Volatile: function does not return.
 249              		@ args = 0, pretend = 0, frame = 0
 250              		@ frame_needed = 0, uses_anonymous_args = 0
 251              		@ link register save eliminated.
 403:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 404:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 405:Core/Src/main.c ****   __disable_irq();
 252              		.loc 1 405 3 view .LVU73
 253              	.LBB8:
 254              	.LBI8:
 255              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccuhTgxg.s 			page 13


  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
ARM GAS  /tmp/ccuhTgxg.s 			page 14


  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
ARM GAS  /tmp/ccuhTgxg.s 			page 15


 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
ARM GAS  /tmp/ccuhTgxg.s 			page 16


 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 256              		.loc 2 207 27 view .LVU74
 257              	.LBB9:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 258              		.loc 2 209 3 view .LVU75
 259              		.syntax unified
 260              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 261 0000 72B6     		cpsid i
 262              	@ 0 "" 2
 263              		.thumb
 264              		.syntax unified
 265              	.L6:
 266              	.LBE9:
 267              	.LBE8:
 406:Core/Src/main.c ****   while (1)
 268              		.loc 1 406 3 discriminator 1 view .LVU76
 407:Core/Src/main.c ****   {
 408:Core/Src/main.c ****   }
 269              		.loc 1 408 3 discriminator 1 view .LVU77
 406:Core/Src/main.c ****   while (1)
 270              		.loc 1 406 9 discriminator 1 view .LVU78
 271 0002 FEE7     		b	.L6
 272              		.cfi_endproc
 273              	.LFE163:
 275              		.section	.text.MX_ICACHE_Init,"ax",%progbits
 276              		.align	1
 277              		.syntax unified
 278              		.thumb
 279              		.thumb_func
 281              	MX_ICACHE_Init:
 282              	.LFB160:
 254:Core/Src/main.c **** 
 283              		.loc 1 254 1 view -0
 284              		.cfi_startproc
 285              		@ args = 0, pretend = 0, frame = 0
 286              		@ frame_needed = 0, uses_anonymous_args = 0
 287 0000 08B5     		push	{r3, lr}
 288              	.LCFI3:
 289              		.cfi_def_cfa_offset 8
 290              		.cfi_offset 3, -8
 291              		.cfi_offset 14, -4
 266:Core/Src/main.c ****   {
 292              		.loc 1 266 3 view .LVU80
 266:Core/Src/main.c ****   {
 293              		.loc 1 266 7 is_stmt 0 view .LVU81
 294 0002 0020     		movs	r0, #0
 295 0004 FFF7FEFF 		bl	HAL_ICACHE_ConfigAssociativityMode
 296              	.LVL8:
ARM GAS  /tmp/ccuhTgxg.s 			page 17


 266:Core/Src/main.c ****   {
 297              		.loc 1 266 6 view .LVU82
 298 0008 18B9     		cbnz	r0, .L11
 270:Core/Src/main.c ****   {
 299              		.loc 1 270 3 is_stmt 1 view .LVU83
 270:Core/Src/main.c ****   {
 300              		.loc 1 270 7 is_stmt 0 view .LVU84
 301 000a FFF7FEFF 		bl	HAL_ICACHE_Enable
 302              	.LVL9:
 270:Core/Src/main.c ****   {
 303              		.loc 1 270 6 view .LVU85
 304 000e 10B9     		cbnz	r0, .L12
 278:Core/Src/main.c **** 
 305              		.loc 1 278 1 view .LVU86
 306 0010 08BD     		pop	{r3, pc}
 307              	.L11:
 268:Core/Src/main.c ****   }
 308              		.loc 1 268 5 is_stmt 1 view .LVU87
 309 0012 FFF7FEFF 		bl	Error_Handler
 310              	.LVL10:
 311              	.L12:
 272:Core/Src/main.c ****   }
 312              		.loc 1 272 5 view .LVU88
 313 0016 FFF7FEFF 		bl	Error_Handler
 314              	.LVL11:
 315              		.cfi_endproc
 316              	.LFE160:
 318              		.section	.text.MX_I2C2_Init,"ax",%progbits
 319              		.align	1
 320              		.syntax unified
 321              		.thumb
 322              		.thumb_func
 324              	MX_I2C2_Init:
 325              	.LFB159:
 204:Core/Src/main.c **** 
 326              		.loc 1 204 1 view -0
 327              		.cfi_startproc
 328              		@ args = 0, pretend = 0, frame = 0
 329              		@ frame_needed = 0, uses_anonymous_args = 0
 330 0000 08B5     		push	{r3, lr}
 331              	.LCFI4:
 332              		.cfi_def_cfa_offset 8
 333              		.cfi_offset 3, -8
 334              		.cfi_offset 14, -4
 213:Core/Src/main.c ****   hi2c2.Init.Timing = 0x0040163A; //0x10B0DCFB
 335              		.loc 1 213 3 view .LVU90
 213:Core/Src/main.c ****   hi2c2.Init.Timing = 0x0040163A; //0x10B0DCFB
 336              		.loc 1 213 18 is_stmt 0 view .LVU91
 337 0002 1348     		ldr	r0, .L21
 338 0004 134B     		ldr	r3, .L21+4
 339 0006 0360     		str	r3, [r0]
 214:Core/Src/main.c ****   hi2c2.Init.OwnAddress1 = 0;
 340              		.loc 1 214 3 is_stmt 1 view .LVU92
 214:Core/Src/main.c ****   hi2c2.Init.OwnAddress1 = 0;
 341              		.loc 1 214 21 is_stmt 0 view .LVU93
 342 0008 134B     		ldr	r3, .L21+8
 343 000a 4360     		str	r3, [r0, #4]
ARM GAS  /tmp/ccuhTgxg.s 			page 18


 215:Core/Src/main.c ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 344              		.loc 1 215 3 is_stmt 1 view .LVU94
 215:Core/Src/main.c ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 345              		.loc 1 215 26 is_stmt 0 view .LVU95
 346 000c 0023     		movs	r3, #0
 347 000e 8360     		str	r3, [r0, #8]
 216:Core/Src/main.c ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 348              		.loc 1 216 3 is_stmt 1 view .LVU96
 216:Core/Src/main.c ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 349              		.loc 1 216 29 is_stmt 0 view .LVU97
 350 0010 0122     		movs	r2, #1
 351 0012 C260     		str	r2, [r0, #12]
 217:Core/Src/main.c ****   hi2c2.Init.OwnAddress2 = 0;
 352              		.loc 1 217 3 is_stmt 1 view .LVU98
 217:Core/Src/main.c ****   hi2c2.Init.OwnAddress2 = 0;
 353              		.loc 1 217 30 is_stmt 0 view .LVU99
 354 0014 0361     		str	r3, [r0, #16]
 218:Core/Src/main.c ****   hi2c2.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 355              		.loc 1 218 3 is_stmt 1 view .LVU100
 218:Core/Src/main.c ****   hi2c2.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 356              		.loc 1 218 26 is_stmt 0 view .LVU101
 357 0016 4361     		str	r3, [r0, #20]
 219:Core/Src/main.c ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 358              		.loc 1 219 3 is_stmt 1 view .LVU102
 219:Core/Src/main.c ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 359              		.loc 1 219 31 is_stmt 0 view .LVU103
 360 0018 8361     		str	r3, [r0, #24]
 220:Core/Src/main.c ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 361              		.loc 1 220 3 is_stmt 1 view .LVU104
 220:Core/Src/main.c ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 362              		.loc 1 220 30 is_stmt 0 view .LVU105
 363 001a C361     		str	r3, [r0, #28]
 221:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 364              		.loc 1 221 3 is_stmt 1 view .LVU106
 221:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 365              		.loc 1 221 28 is_stmt 0 view .LVU107
 366 001c 0362     		str	r3, [r0, #32]
 222:Core/Src/main.c ****   {
 367              		.loc 1 222 3 is_stmt 1 view .LVU108
 222:Core/Src/main.c ****   {
 368              		.loc 1 222 7 is_stmt 0 view .LVU109
 369 001e FFF7FEFF 		bl	HAL_I2C_Init
 370              	.LVL12:
 222:Core/Src/main.c ****   {
 371              		.loc 1 222 6 view .LVU110
 372 0022 70B9     		cbnz	r0, .L18
 229:Core/Src/main.c ****   {
 373              		.loc 1 229 3 is_stmt 1 view .LVU111
 229:Core/Src/main.c ****   {
 374              		.loc 1 229 7 is_stmt 0 view .LVU112
 375 0024 0021     		movs	r1, #0
 376 0026 0A48     		ldr	r0, .L21
 377 0028 FFF7FEFF 		bl	HAL_I2CEx_ConfigAnalogFilter
 378              	.LVL13:
 229:Core/Src/main.c ****   {
 379              		.loc 1 229 6 view .LVU113
 380 002c 58B9     		cbnz	r0, .L19
ARM GAS  /tmp/ccuhTgxg.s 			page 19


 236:Core/Src/main.c ****   {
 381              		.loc 1 236 3 is_stmt 1 view .LVU114
 236:Core/Src/main.c ****   {
 382              		.loc 1 236 7 is_stmt 0 view .LVU115
 383 002e 0021     		movs	r1, #0
 384 0030 0748     		ldr	r0, .L21
 385 0032 FFF7FEFF 		bl	HAL_I2CEx_ConfigDigitalFilter
 386              	.LVL14:
 236:Core/Src/main.c ****   {
 387              		.loc 1 236 6 view .LVU116
 388 0036 40B9     		cbnz	r0, .L20
 241:Core/Src/main.c ****   /* USER CODE BEGIN I2C2_Init 2 */
 389              		.loc 1 241 3 is_stmt 1 view .LVU117
 390 0038 4FF40010 		mov	r0, #2097152
 391 003c FFF7FEFF 		bl	HAL_I2CEx_EnableFastModePlus
 392              	.LVL15:
 246:Core/Src/main.c **** 
 393              		.loc 1 246 1 is_stmt 0 view .LVU118
 394 0040 08BD     		pop	{r3, pc}
 395              	.L18:
 224:Core/Src/main.c ****   }
 396              		.loc 1 224 5 is_stmt 1 view .LVU119
 397 0042 FFF7FEFF 		bl	Error_Handler
 398              	.LVL16:
 399              	.L19:
 231:Core/Src/main.c ****   }
 400              		.loc 1 231 5 view .LVU120
 401 0046 FFF7FEFF 		bl	Error_Handler
 402              	.LVL17:
 403              	.L20:
 238:Core/Src/main.c ****   }
 404              		.loc 1 238 5 view .LVU121
 405 004a FFF7FEFF 		bl	Error_Handler
 406              	.LVL18:
 407              	.L22:
 408 004e 00BF     		.align	2
 409              	.L21:
 410 0050 00000000 		.word	hi2c2
 411 0054 00580040 		.word	1073764352
 412 0058 3A164000 		.word	4199994
 413              		.cfi_endproc
 414              	.LFE159:
 416              		.section	.text.SystemClock_Config,"ax",%progbits
 417              		.align	1
 418              		.global	SystemClock_Config
 419              		.syntax unified
 420              		.thumb
 421              		.thumb_func
 423              	SystemClock_Config:
 424              	.LFB157:
 107:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 425              		.loc 1 107 1 view -0
 426              		.cfi_startproc
 427              		@ args = 0, pretend = 0, frame = 96
 428              		@ frame_needed = 0, uses_anonymous_args = 0
 429 0000 00B5     		push	{lr}
 430              	.LCFI5:
ARM GAS  /tmp/ccuhTgxg.s 			page 20


 431              		.cfi_def_cfa_offset 4
 432              		.cfi_offset 14, -4
 433 0002 99B0     		sub	sp, sp, #100
 434              	.LCFI6:
 435              		.cfi_def_cfa_offset 104
 108:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 436              		.loc 1 108 3 view .LVU123
 108:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 437              		.loc 1 108 22 is_stmt 0 view .LVU124
 438 0004 4822     		movs	r2, #72
 439 0006 0021     		movs	r1, #0
 440 0008 06A8     		add	r0, sp, #24
 441 000a FFF7FEFF 		bl	memset
 442              	.LVL19:
 109:Core/Src/main.c **** 
 443              		.loc 1 109 3 is_stmt 1 view .LVU125
 109:Core/Src/main.c **** 
 444              		.loc 1 109 22 is_stmt 0 view .LVU126
 445 000e 0020     		movs	r0, #0
 446 0010 0190     		str	r0, [sp, #4]
 447 0012 0290     		str	r0, [sp, #8]
 448 0014 0390     		str	r0, [sp, #12]
 449 0016 0490     		str	r0, [sp, #16]
 450 0018 0590     		str	r0, [sp, #20]
 113:Core/Src/main.c ****   {
 451              		.loc 1 113 3 is_stmt 1 view .LVU127
 113:Core/Src/main.c ****   {
 452              		.loc 1 113 7 is_stmt 0 view .LVU128
 453 001a FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 454              	.LVL20:
 113:Core/Src/main.c ****   {
 455              		.loc 1 113 6 view .LVU129
 456 001e 20BB     		cbnz	r0, .L28
 121:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 457              		.loc 1 121 3 is_stmt 1 view .LVU130
 121:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 458              		.loc 1 121 36 is_stmt 0 view .LVU131
 459 0020 0123     		movs	r3, #1
 460 0022 0693     		str	r3, [sp, #24]
 122:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 461              		.loc 1 122 3 is_stmt 1 view .LVU132
 122:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 462              		.loc 1 122 30 is_stmt 0 view .LVU133
 463 0024 4FF48033 		mov	r3, #65536
 464 0028 0793     		str	r3, [sp, #28]
 123:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 465              		.loc 1 123 3 is_stmt 1 view .LVU134
 123:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 466              		.loc 1 123 34 is_stmt 0 view .LVU135
 467 002a 0223     		movs	r3, #2
 468 002c 1193     		str	r3, [sp, #68]
 124:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 2;
 469              		.loc 1 124 3 is_stmt 1 view .LVU136
 124:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 2;
 470              		.loc 1 124 35 is_stmt 0 view .LVU137
 471 002e 0322     		movs	r2, #3
 472 0030 1292     		str	r2, [sp, #72]
ARM GAS  /tmp/ccuhTgxg.s 			page 21


 125:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 12;
 473              		.loc 1 125 3 is_stmt 1 view .LVU138
 125:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 12;
 474              		.loc 1 125 30 is_stmt 0 view .LVU139
 475 0032 1393     		str	r3, [sp, #76]
 126:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 476              		.loc 1 126 3 is_stmt 1 view .LVU140
 126:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 477              		.loc 1 126 30 is_stmt 0 view .LVU141
 478 0034 0C22     		movs	r2, #12
 479 0036 1492     		str	r2, [sp, #80]
 127:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 480              		.loc 1 127 3 is_stmt 1 view .LVU142
 127:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 481              		.loc 1 127 30 is_stmt 0 view .LVU143
 482 0038 0722     		movs	r2, #7
 483 003a 1592     		str	r2, [sp, #84]
 128:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 484              		.loc 1 128 3 is_stmt 1 view .LVU144
 128:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 485              		.loc 1 128 30 is_stmt 0 view .LVU145
 486 003c 1693     		str	r3, [sp, #88]
 129:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 487              		.loc 1 129 3 is_stmt 1 view .LVU146
 129:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 488              		.loc 1 129 30 is_stmt 0 view .LVU147
 489 003e 1793     		str	r3, [sp, #92]
 130:Core/Src/main.c ****   {
 490              		.loc 1 130 3 is_stmt 1 view .LVU148
 130:Core/Src/main.c ****   {
 491              		.loc 1 130 7 is_stmt 0 view .LVU149
 492 0040 06A8     		add	r0, sp, #24
 493 0042 FFF7FEFF 		bl	HAL_RCC_OscConfig
 494              	.LVL21:
 130:Core/Src/main.c ****   {
 495              		.loc 1 130 6 view .LVU150
 496 0046 90B9     		cbnz	r0, .L29
 137:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 497              		.loc 1 137 3 is_stmt 1 view .LVU151
 137:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 498              		.loc 1 137 31 is_stmt 0 view .LVU152
 499 0048 0F23     		movs	r3, #15
 500 004a 0193     		str	r3, [sp, #4]
 139:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 501              		.loc 1 139 3 is_stmt 1 view .LVU153
 139:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 502              		.loc 1 139 34 is_stmt 0 view .LVU154
 503 004c 0323     		movs	r3, #3
 504 004e 0293     		str	r3, [sp, #8]
 140:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 505              		.loc 1 140 3 is_stmt 1 view .LVU155
 140:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 506              		.loc 1 140 35 is_stmt 0 view .LVU156
 507 0050 0023     		movs	r3, #0
 508 0052 0393     		str	r3, [sp, #12]
 141:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 509              		.loc 1 141 3 is_stmt 1 view .LVU157
ARM GAS  /tmp/ccuhTgxg.s 			page 22


 141:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 510              		.loc 1 141 36 is_stmt 0 view .LVU158
 511 0054 0493     		str	r3, [sp, #16]
 142:Core/Src/main.c **** 
 512              		.loc 1 142 3 is_stmt 1 view .LVU159
 142:Core/Src/main.c **** 
 513              		.loc 1 142 36 is_stmt 0 view .LVU160
 514 0056 0593     		str	r3, [sp, #20]
 144:Core/Src/main.c ****   {
 515              		.loc 1 144 3 is_stmt 1 view .LVU161
 144:Core/Src/main.c ****   {
 516              		.loc 1 144 7 is_stmt 0 view .LVU162
 517 0058 0421     		movs	r1, #4
 518 005a 0DEB0100 		add	r0, sp, r1
 519 005e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 520              	.LVL22:
 144:Core/Src/main.c ****   {
 521              		.loc 1 144 6 view .LVU163
 522 0062 30B9     		cbnz	r0, .L30
 148:Core/Src/main.c **** 
 523              		.loc 1 148 1 view .LVU164
 524 0064 19B0     		add	sp, sp, #100
 525              	.LCFI7:
 526              		.cfi_remember_state
 527              		.cfi_def_cfa_offset 4
 528              		@ sp needed
 529 0066 5DF804FB 		ldr	pc, [sp], #4
 530              	.L28:
 531              	.LCFI8:
 532              		.cfi_restore_state
 115:Core/Src/main.c ****   }
 533              		.loc 1 115 5 is_stmt 1 view .LVU165
 534 006a FFF7FEFF 		bl	Error_Handler
 535              	.LVL23:
 536              	.L29:
 132:Core/Src/main.c ****   }
 537              		.loc 1 132 5 view .LVU166
 538 006e FFF7FEFF 		bl	Error_Handler
 539              	.LVL24:
 540              	.L30:
 146:Core/Src/main.c ****   }
 541              		.loc 1 146 5 view .LVU167
 542 0072 FFF7FEFF 		bl	Error_Handler
 543              	.LVL25:
 544              		.cfi_endproc
 545              	.LFE157:
 547              		.section	.text.main,"ax",%progbits
 548              		.align	1
 549              		.global	main
 550              		.syntax unified
 551              		.thumb
 552              		.thumb_func
 554              	main:
 555              	.LFB156:
  57:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 556              		.loc 1 57 1 view -0
 557              		.cfi_startproc
ARM GAS  /tmp/ccuhTgxg.s 			page 23


 558              		@ Volatile: function does not return.
 559              		@ args = 0, pretend = 0, frame = 0
 560              		@ frame_needed = 0, uses_anonymous_args = 0
 561 0000 08B5     		push	{r3, lr}
 562              	.LCFI9:
 563              		.cfi_def_cfa_offset 8
 564              		.cfi_offset 3, -8
 565              		.cfi_offset 14, -4
  61:Core/Src/main.c **** 
 566              		.loc 1 61 3 view .LVU169
 567 0002 FFF7FEFF 		bl	HAL_Init
 568              	.LVL26:
  64:Core/Src/main.c **** 
 569              		.loc 1 64 3 view .LVU170
 570 0006 FFF7FEFF 		bl	SystemClock_Config
 571              	.LVL27:
  79:Core/Src/main.c ****   MX_ICACHE_Init();
 572              		.loc 1 79 3 view .LVU171
 573 000a FFF7FEFF 		bl	MX_GPIO_Init
 574              	.LVL28:
  80:Core/Src/main.c ****   // MX_I2C1_Init();
 575              		.loc 1 80 3 view .LVU172
 576 000e FFF7FEFF 		bl	MX_ICACHE_Init
 577              	.LVL29:
  82:Core/Src/main.c ****   // MX_USART3_UART_Init();
 578              		.loc 1 82 3 view .LVU173
 579 0012 FFF7FEFF 		bl	MX_I2C2_Init
 580              	.LVL30:
  84:Core/Src/main.c **** 
 581              		.loc 1 84 3 view .LVU174
 582 0016 FFF7FEFF 		bl	MX_USB_Device_Init
 583              	.LVL31:
  87:Core/Src/main.c ****   IS31FL3737_init(191);
 584              		.loc 1 87 3 view .LVU175
 585 001a A120     		movs	r0, #161
 586 001c FFF7FEFF 		bl	IS31FL3737_init
 587              	.LVL32:
  88:Core/Src/main.c **** 
 588              		.loc 1 88 3 view .LVU176
 589 0020 BF20     		movs	r0, #191
 590 0022 FFF7FEFF 		bl	IS31FL3737_init
 591              	.LVL33:
  90:Core/Src/main.c ****   load_led_pattern(get_led_pattern());
 592              		.loc 1 90 3 view .LVU177
  90:Core/Src/main.c ****   load_led_pattern(get_led_pattern());
 593              		.loc 1 90 6 is_stmt 0 view .LVU178
 594 0026 FFF7FEFF 		bl	ledbar_animation_is_enabled
 595              	.LVL34:
  90:Core/Src/main.c ****   load_led_pattern(get_led_pattern());
 596              		.loc 1 90 5 view .LVU179
 597 002a 80B9     		cbnz	r0, .L36
 598              	.L32:
  91:Core/Src/main.c **** 
 599              		.loc 1 91 3 is_stmt 1 view .LVU180
 600 002c FFF7FEFF 		bl	get_led_pattern
 601              	.LVL35:
 602 0030 FFF7FEFF 		bl	load_led_pattern
ARM GAS  /tmp/ccuhTgxg.s 			page 24


 603              	.LVL36:
 604              	.L33:
  94:Core/Src/main.c ****   {
 605              		.loc 1 94 3 view .LVU181
  96:Core/Src/main.c ****     IS31FL3737_update_pwm_buffers(161, 191);
 606              		.loc 1 96 5 view .LVU182
 607 0034 FFF7FEFF 		bl	scan_matrix
 608              	.LVL37:
  97:Core/Src/main.c ****     if(ledbar_animation_is_enabled() == true) ledbar_animate();
 609              		.loc 1 97 5 view .LVU183
 610 0038 BF21     		movs	r1, #191
 611 003a A120     		movs	r0, #161
 612 003c FFF7FEFF 		bl	IS31FL3737_update_pwm_buffers
 613              	.LVL38:
  98:Core/Src/main.c ****   }
 614              		.loc 1 98 5 view .LVU184
  98:Core/Src/main.c ****   }
 615              		.loc 1 98 8 is_stmt 0 view .LVU185
 616 0040 FFF7FEFF 		bl	ledbar_animation_is_enabled
 617              	.LVL39:
  98:Core/Src/main.c ****   }
 618              		.loc 1 98 7 view .LVU186
 619 0044 0028     		cmp	r0, #0
 620 0046 F5D0     		beq	.L33
  98:Core/Src/main.c ****   }
 621              		.loc 1 98 47 is_stmt 1 discriminator 1 view .LVU187
 622 0048 FFF7FEFF 		bl	ledbar_animate
 623              	.LVL40:
 624 004c F2E7     		b	.L33
 625              	.L36:
  90:Core/Src/main.c ****   load_led_pattern(get_led_pattern());
 626              		.loc 1 90 45 discriminator 1 view .LVU188
 627 004e FFF7FEFF 		bl	ledbar_animate
 628              	.LVL41:
 629 0052 EBE7     		b	.L32
 630              		.cfi_endproc
 631              	.LFE156:
 633              		.global	huart3
 634              		.section	.bss.huart3,"aw",%nobits
 635              		.align	2
 638              	huart3:
 639 0000 00000000 		.space	148
 639      00000000 
 639      00000000 
 639      00000000 
 639      00000000 
 640              		.global	hi2c2
 641              		.section	.bss.hi2c2,"aw",%nobits
 642              		.align	2
 645              	hi2c2:
 646 0000 00000000 		.space	84
 646      00000000 
 646      00000000 
 646      00000000 
 646      00000000 
 647              		.global	hi2c1
 648              		.section	.bss.hi2c1,"aw",%nobits
ARM GAS  /tmp/ccuhTgxg.s 			page 25


 649              		.align	2
 652              	hi2c1:
 653 0000 00000000 		.space	84
 653      00000000 
 653      00000000 
 653      00000000 
 653      00000000 
 654              		.text
 655              	.Letext0:
 656              		.file 3 "/home/yul/toolchain/arm-gnu-toolchain-12.2.rel1-x86_64-arm-none-eabi/arm-none-eabi/includ
 657              		.file 4 "/home/yul/toolchain/arm-gnu-toolchain-12.2.rel1-x86_64-arm-none-eabi/arm-none-eabi/includ
 658              		.file 5 "Drivers/CMSIS/Device/ST/STM32L5xx/Include/stm32l562xx.h"
 659              		.file 6 "Drivers/STM32L5xx_HAL_Driver/Inc/stm32l5xx_hal_def.h"
 660              		.file 7 "Drivers/STM32L5xx_HAL_Driver/Inc/stm32l5xx_hal_rcc.h"
 661              		.file 8 "Drivers/STM32L5xx_HAL_Driver/Inc/stm32l5xx_hal_gpio.h"
 662              		.file 9 "Drivers/STM32L5xx_HAL_Driver/Inc/stm32l5xx_hal_dma.h"
 663              		.file 10 "Drivers/STM32L5xx_HAL_Driver/Inc/stm32l5xx_hal_i2c.h"
 664              		.file 11 "Drivers/STM32L5xx_HAL_Driver/Inc/stm32l5xx_hal_uart.h"
 665              		.file 12 "Drivers/STM32L5xx_HAL_Driver/Inc/stm32l5xx_hal_pwr_ex.h"
 666              		.file 13 "Drivers/STM32L5xx_HAL_Driver/Inc/stm32l5xx_hal_i2c_ex.h"
 667              		.file 14 "Drivers/STM32L5xx_HAL_Driver/Inc/stm32l5xx_hal_icache.h"
 668              		.file 15 "Core/Inc/is31fl3737.h"
 669              		.file 16 "Core/Inc/rgb.h"
 670              		.file 17 "Core/Inc/keyboard.h"
 671              		.file 18 "USB_Device/App/usb_device.h"
 672              		.file 19 "Drivers/STM32L5xx_HAL_Driver/Inc/stm32l5xx_hal.h"
 673              		.file 20 "<built-in>"
ARM GAS  /tmp/ccuhTgxg.s 			page 26


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccuhTgxg.s:22     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccuhTgxg.s:27     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccuhTgxg.s:230    .text.MX_GPIO_Init:00000000000000ec $d
     /tmp/ccuhTgxg.s:238    .text.Error_Handler:0000000000000000 $t
     /tmp/ccuhTgxg.s:244    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccuhTgxg.s:276    .text.MX_ICACHE_Init:0000000000000000 $t
     /tmp/ccuhTgxg.s:281    .text.MX_ICACHE_Init:0000000000000000 MX_ICACHE_Init
     /tmp/ccuhTgxg.s:319    .text.MX_I2C2_Init:0000000000000000 $t
     /tmp/ccuhTgxg.s:324    .text.MX_I2C2_Init:0000000000000000 MX_I2C2_Init
     /tmp/ccuhTgxg.s:410    .text.MX_I2C2_Init:0000000000000050 $d
     /tmp/ccuhTgxg.s:645    .bss.hi2c2:0000000000000000 hi2c2
     /tmp/ccuhTgxg.s:417    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccuhTgxg.s:423    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccuhTgxg.s:548    .text.main:0000000000000000 $t
     /tmp/ccuhTgxg.s:554    .text.main:0000000000000000 main
     /tmp/ccuhTgxg.s:638    .bss.huart3:0000000000000000 huart3
     /tmp/ccuhTgxg.s:635    .bss.huart3:0000000000000000 $d
     /tmp/ccuhTgxg.s:642    .bss.hi2c2:0000000000000000 $d
     /tmp/ccuhTgxg.s:652    .bss.hi2c1:0000000000000000 hi2c1
     /tmp/ccuhTgxg.s:649    .bss.hi2c1:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_ICACHE_ConfigAssociativityMode
HAL_ICACHE_Enable
HAL_I2C_Init
HAL_I2CEx_ConfigAnalogFilter
HAL_I2CEx_ConfigDigitalFilter
HAL_I2CEx_EnableFastModePlus
memset
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_USB_Device_Init
IS31FL3737_init
ledbar_animation_is_enabled
get_led_pattern
load_led_pattern
scan_matrix
IS31FL3737_update_pwm_buffers
ledbar_animate
