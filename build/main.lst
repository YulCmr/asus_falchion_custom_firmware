ARM GAS  /tmp/cccm0VC1.s 			page 1


   1              		.cpu cortex-m33
   2              		.arch armv8-m.main
   3              		.fpu fpv4-sp-d16
   4              		.arch_extension dsp
   5              		.eabi_attribute 27, 1
   6              		.eabi_attribute 28, 1
   7              		.eabi_attribute 20, 1
   8              		.eabi_attribute 21, 1
   9              		.eabi_attribute 23, 3
  10              		.eabi_attribute 24, 1
  11              		.eabi_attribute 25, 1
  12              		.eabi_attribute 26, 1
  13              		.eabi_attribute 30, 1
  14              		.eabi_attribute 34, 1
  15              		.eabi_attribute 18, 4
  16              		.file	"main.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.file 1 "Core/Src/main.c"
  21              		.section	.text.MX_GPIO_Init,"ax",%progbits
  22              		.align	1
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	MX_GPIO_Init:
  28              	.LFB162:
   1:Core/Src/main.c **** /**
   2:Core/Src/main.c ****   ******************************************************************************
   3:Core/Src/main.c ****   * @file           : main.c
   4:Core/Src/main.c ****   * @brief          : Main program body
   5:Core/Src/main.c ****   ******************************************************************************
   6:Core/Src/main.c ****   * @attention
   7:Core/Src/main.c ****   *
   8:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
   9:Core/Src/main.c ****   * All rights reserved.
  10:Core/Src/main.c ****   *
  11:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  12:Core/Src/main.c ****   * in the root directory of this software component.
  13:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  14:Core/Src/main.c ****   *
  15:Core/Src/main.c ****   ******************************************************************************
  16:Core/Src/main.c ****   */
  17:Core/Src/main.c **** 
  18:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  19:Core/Src/main.c **** #include "main.h"
  20:Core/Src/main.c **** 
  21:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** //#define SYS_MEM_START_ADDR	0x0BF90000
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
ARM GAS  /tmp/cccm0VC1.s 			page 2


  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  33:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  34:Core/Src/main.c **** I2C_HandleTypeDef hi2c2;
  35:Core/Src/main.c **** UART_HandleTypeDef huart3;
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** // void (*boot_jump)(void);
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  41:Core/Src/main.c **** void SystemClock_Config(void);
  42:Core/Src/main.c **** static void MX_GPIO_Init(void);
  43:Core/Src/main.c **** static void MX_I2C1_Init(void);
  44:Core/Src/main.c **** static void MX_I2C2_Init(void);
  45:Core/Src/main.c **** static void MX_USART3_UART_Init(void);
  46:Core/Src/main.c **** static void MX_ICACHE_Init(void);
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /**
  51:Core/Src/main.c ****   * @brief  The application entry point.
  52:Core/Src/main.c ****   * @retval int
  53:Core/Src/main.c ****   */
  54:Core/Src/main.c **** int main(void)
  55:Core/Src/main.c **** {
  56:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  57:Core/Src/main.c **** 
  58:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  59:Core/Src/main.c ****   HAL_Init();
  60:Core/Src/main.c **** 
  61:Core/Src/main.c ****   /* Configure the system clock */
  62:Core/Src/main.c ****   SystemClock_Config();
  63:Core/Src/main.c **** 
  64:Core/Src/main.c ****   /* DFU BL Jump. May be useless in the end ... We'll decide later ! */
  65:Core/Src/main.c ****   // HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_SET);
  66:Core/Src/main.c ****   // HAL_Delay(1);
  67:Core/Src/main.c ****   // if(HAL_GPIO_ReadPin(GPIOC, GPIO_PIN_0 == GPIO_PIN_SET)) {
  68:Core/Src/main.c ****   //   HAL_DeInit();
  69:Core/Src/main.c ****   //   boot_jump = (void (*)(void))(*((uint32_t *)(SYS_MEM_START_ADDR + 4)));
  70:Core/Src/main.c ****   //   __set_MSP(*(__IO uint32_t*)SYS_MEM_START_ADDR);
  71:Core/Src/main.c ****   //
  72:Core/Src/main.c ****   //   boot_jump();
  73:Core/Src/main.c ****   // }
  74:Core/Src/main.c ****   // HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, GPIO_PIN_RESET);
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****   /* Initialize all configured peripherals */
  77:Core/Src/main.c ****   MX_GPIO_Init();
  78:Core/Src/main.c ****   MX_ICACHE_Init();
  79:Core/Src/main.c ****   // MX_I2C1_Init();
  80:Core/Src/main.c ****   MX_I2C2_Init();
  81:Core/Src/main.c ****   // MX_USART3_UART_Init();
  82:Core/Src/main.c ****   MX_USB_Device_Init();
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* Init RGB Matrixes */
  85:Core/Src/main.c ****   IS31FL3737_init(161);
  86:Core/Src/main.c ****   IS31FL3737_init(191);
  87:Core/Src/main.c **** 
ARM GAS  /tmp/cccm0VC1.s 			page 3


  88:Core/Src/main.c ****   /* Infinite loop */
  89:Core/Src/main.c ****   while (1)
  90:Core/Src/main.c ****   {
  91:Core/Src/main.c ****     scan_matrix();
  92:Core/Src/main.c ****     IS31FL3737_update_pwm_buffers(161, 191);
  93:Core/Src/main.c ****   }
  94:Core/Src/main.c **** }
  95:Core/Src/main.c **** 
  96:Core/Src/main.c **** /**
  97:Core/Src/main.c ****   * @brief System Clock Configuration
  98:Core/Src/main.c ****   * @retval None
  99:Core/Src/main.c ****   */
 100:Core/Src/main.c **** void SystemClock_Config(void)
 101:Core/Src/main.c **** {
 102:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 103:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 106:Core/Src/main.c ****   */
 107:Core/Src/main.c ****   if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE0) != HAL_OK)
 108:Core/Src/main.c ****   {
 109:Core/Src/main.c ****     Error_Handler();
 110:Core/Src/main.c ****   }
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 113:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 114:Core/Src/main.c ****   */
 115:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 116:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 117:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 118:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 119:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 2;
 120:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 12;
 121:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 122:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 123:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 124:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 125:Core/Src/main.c ****   {
 126:Core/Src/main.c ****     Error_Handler();
 127:Core/Src/main.c ****   }
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 130:Core/Src/main.c ****   */
 131:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 132:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 133:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 134:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 135:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 136:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 137:Core/Src/main.c **** 
 138:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 139:Core/Src/main.c ****   {
 140:Core/Src/main.c ****     Error_Handler();
 141:Core/Src/main.c ****   }
 142:Core/Src/main.c **** }
 143:Core/Src/main.c **** 
 144:Core/Src/main.c **** /**
ARM GAS  /tmp/cccm0VC1.s 			page 4


 145:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 146:Core/Src/main.c ****   * @param None
 147:Core/Src/main.c ****   * @retval None
 148:Core/Src/main.c ****   */
 149:Core/Src/main.c **** static void MX_I2C1_Init(void)
 150:Core/Src/main.c **** {
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 153:Core/Src/main.c **** 
 154:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 155:Core/Src/main.c **** 
 156:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 157:Core/Src/main.c **** 
 158:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 159:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 160:Core/Src/main.c ****   hi2c1.Init.Timing = 0x10B0DCFB;
 161:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 162:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 163:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 164:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 165:Core/Src/main.c ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 166:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 167:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 168:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 169:Core/Src/main.c ****   {
 170:Core/Src/main.c ****     Error_Handler();
 171:Core/Src/main.c ****   }
 172:Core/Src/main.c **** 
 173:Core/Src/main.c ****   /** Configure Analogue filter
 174:Core/Src/main.c ****   */
 175:Core/Src/main.c ****   if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 176:Core/Src/main.c ****   {
 177:Core/Src/main.c ****     Error_Handler();
 178:Core/Src/main.c ****   }
 179:Core/Src/main.c **** 
 180:Core/Src/main.c ****   /** Configure Digital filter
 181:Core/Src/main.c ****   */
 182:Core/Src/main.c ****   if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 183:Core/Src/main.c ****   {
 184:Core/Src/main.c ****     Error_Handler();
 185:Core/Src/main.c ****   }
 186:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 187:Core/Src/main.c **** 
 188:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 189:Core/Src/main.c **** 
 190:Core/Src/main.c **** }
 191:Core/Src/main.c **** 
 192:Core/Src/main.c **** /**
 193:Core/Src/main.c ****   * @brief I2C2 Initialization Function
 194:Core/Src/main.c ****   * @param None
 195:Core/Src/main.c ****   * @retval None
 196:Core/Src/main.c ****   */
 197:Core/Src/main.c **** static void MX_I2C2_Init(void)
 198:Core/Src/main.c **** {
 199:Core/Src/main.c **** 
 200:Core/Src/main.c ****   /* USER CODE BEGIN I2C2_Init 0 */
 201:Core/Src/main.c **** 
ARM GAS  /tmp/cccm0VC1.s 			page 5


 202:Core/Src/main.c ****   /* USER CODE END I2C2_Init 0 */
 203:Core/Src/main.c **** 
 204:Core/Src/main.c ****   /* USER CODE BEGIN I2C2_Init 1 */
 205:Core/Src/main.c **** 
 206:Core/Src/main.c ****   /* USER CODE END I2C2_Init 1 */
 207:Core/Src/main.c ****   hi2c2.Instance = I2C2;
 208:Core/Src/main.c ****   hi2c2.Init.Timing = 0x10B0DCFB;
 209:Core/Src/main.c ****   hi2c2.Init.OwnAddress1 = 0;
 210:Core/Src/main.c ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 211:Core/Src/main.c ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 212:Core/Src/main.c ****   hi2c2.Init.OwnAddress2 = 0;
 213:Core/Src/main.c ****   hi2c2.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 214:Core/Src/main.c ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 215:Core/Src/main.c ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 216:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 217:Core/Src/main.c ****   {
 218:Core/Src/main.c ****     Error_Handler();
 219:Core/Src/main.c ****   }
 220:Core/Src/main.c **** 
 221:Core/Src/main.c ****   /** Configure Analogue filter
 222:Core/Src/main.c ****   */
 223:Core/Src/main.c ****   if (HAL_I2CEx_ConfigAnalogFilter(&hi2c2, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 224:Core/Src/main.c ****   {
 225:Core/Src/main.c ****     Error_Handler();
 226:Core/Src/main.c ****   }
 227:Core/Src/main.c **** 
 228:Core/Src/main.c ****   /** Configure Digital filter
 229:Core/Src/main.c ****   */
 230:Core/Src/main.c ****   if (HAL_I2CEx_ConfigDigitalFilter(&hi2c2, 0) != HAL_OK)
 231:Core/Src/main.c ****   {
 232:Core/Src/main.c ****     Error_Handler();
 233:Core/Src/main.c ****   }
 234:Core/Src/main.c ****   /* USER CODE BEGIN I2C2_Init 2 */
 235:Core/Src/main.c **** 
 236:Core/Src/main.c ****   /* USER CODE END I2C2_Init 2 */
 237:Core/Src/main.c **** 
 238:Core/Src/main.c **** }
 239:Core/Src/main.c **** 
 240:Core/Src/main.c **** /**
 241:Core/Src/main.c ****   * @brief ICACHE Initialization Function
 242:Core/Src/main.c ****   * @param None
 243:Core/Src/main.c ****   * @retval None
 244:Core/Src/main.c ****   */
 245:Core/Src/main.c **** static void MX_ICACHE_Init(void)
 246:Core/Src/main.c **** {
 247:Core/Src/main.c **** 
 248:Core/Src/main.c ****   /* USER CODE BEGIN ICACHE_Init 0 */
 249:Core/Src/main.c **** 
 250:Core/Src/main.c ****   /* USER CODE END ICACHE_Init 0 */
 251:Core/Src/main.c **** 
 252:Core/Src/main.c ****   /* USER CODE BEGIN ICACHE_Init 1 */
 253:Core/Src/main.c **** 
 254:Core/Src/main.c ****   /* USER CODE END ICACHE_Init 1 */
 255:Core/Src/main.c **** 
 256:Core/Src/main.c ****   /** Enable instruction cache in 1-way (direct mapped cache)
 257:Core/Src/main.c ****   */
 258:Core/Src/main.c ****   if (HAL_ICACHE_ConfigAssociativityMode(ICACHE_1WAY) != HAL_OK)
ARM GAS  /tmp/cccm0VC1.s 			page 6


 259:Core/Src/main.c ****   {
 260:Core/Src/main.c ****     Error_Handler();
 261:Core/Src/main.c ****   }
 262:Core/Src/main.c ****   if (HAL_ICACHE_Enable() != HAL_OK)
 263:Core/Src/main.c ****   {
 264:Core/Src/main.c ****     Error_Handler();
 265:Core/Src/main.c ****   }
 266:Core/Src/main.c ****   /* USER CODE BEGIN ICACHE_Init 2 */
 267:Core/Src/main.c **** 
 268:Core/Src/main.c ****   /* USER CODE END ICACHE_Init 2 */
 269:Core/Src/main.c **** 
 270:Core/Src/main.c **** }
 271:Core/Src/main.c **** 
 272:Core/Src/main.c **** /**
 273:Core/Src/main.c ****   * @brief USART3 Initialization Function
 274:Core/Src/main.c ****   * @param None
 275:Core/Src/main.c ****   * @retval None
 276:Core/Src/main.c ****   */
 277:Core/Src/main.c **** static void MX_USART3_UART_Init(void)
 278:Core/Src/main.c **** {
 279:Core/Src/main.c **** 
 280:Core/Src/main.c ****   /* USER CODE BEGIN USART3_Init 0 */
 281:Core/Src/main.c **** 
 282:Core/Src/main.c ****   /* USER CODE END USART3_Init 0 */
 283:Core/Src/main.c **** 
 284:Core/Src/main.c ****   /* USER CODE BEGIN USART3_Init 1 */
 285:Core/Src/main.c **** 
 286:Core/Src/main.c ****   /* USER CODE END USART3_Init 1 */
 287:Core/Src/main.c ****   huart3.Instance = USART3;
 288:Core/Src/main.c ****   huart3.Init.BaudRate = 115200;
 289:Core/Src/main.c ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 290:Core/Src/main.c ****   huart3.Init.StopBits = UART_STOPBITS_1;
 291:Core/Src/main.c ****   huart3.Init.Parity = UART_PARITY_NONE;
 292:Core/Src/main.c ****   huart3.Init.Mode = UART_MODE_TX_RX;
 293:Core/Src/main.c ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 294:Core/Src/main.c ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 295:Core/Src/main.c ****   huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 296:Core/Src/main.c ****   huart3.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 297:Core/Src/main.c ****   huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 298:Core/Src/main.c ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 299:Core/Src/main.c ****   {
 300:Core/Src/main.c ****     Error_Handler();
 301:Core/Src/main.c ****   }
 302:Core/Src/main.c ****   if (HAL_UARTEx_SetTxFifoThreshold(&huart3, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 303:Core/Src/main.c ****   {
 304:Core/Src/main.c ****     Error_Handler();
 305:Core/Src/main.c ****   }
 306:Core/Src/main.c ****   if (HAL_UARTEx_SetRxFifoThreshold(&huart3, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 307:Core/Src/main.c ****   {
 308:Core/Src/main.c ****     Error_Handler();
 309:Core/Src/main.c ****   }
 310:Core/Src/main.c ****   if (HAL_UARTEx_DisableFifoMode(&huart3) != HAL_OK)
 311:Core/Src/main.c ****   {
 312:Core/Src/main.c ****     Error_Handler();
 313:Core/Src/main.c ****   }
 314:Core/Src/main.c ****   /* USER CODE BEGIN USART3_Init 2 */
 315:Core/Src/main.c **** 
ARM GAS  /tmp/cccm0VC1.s 			page 7


 316:Core/Src/main.c ****   /* USER CODE END USART3_Init 2 */
 317:Core/Src/main.c **** 
 318:Core/Src/main.c **** }
 319:Core/Src/main.c **** 
 320:Core/Src/main.c **** /**
 321:Core/Src/main.c ****   * @brief GPIO Initialization Function
 322:Core/Src/main.c ****   * @param None
 323:Core/Src/main.c ****   * @retval None
 324:Core/Src/main.c ****   */
 325:Core/Src/main.c **** static void MX_GPIO_Init(void)
 326:Core/Src/main.c **** {
  29              		.loc 1 326 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 40
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 24
  36              		.cfi_offset 4, -24
  37              		.cfi_offset 5, -20
  38              		.cfi_offset 6, -16
  39              		.cfi_offset 7, -12
  40              		.cfi_offset 8, -8
  41              		.cfi_offset 14, -4
  42 0004 8AB0     		sub	sp, sp, #40
  43              	.LCFI1:
  44              		.cfi_def_cfa_offset 64
 327:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  45              		.loc 1 327 3 view .LVU1
  46              		.loc 1 327 20 is_stmt 0 view .LVU2
  47 0006 0024     		movs	r4, #0
  48 0008 0594     		str	r4, [sp, #20]
  49 000a 0694     		str	r4, [sp, #24]
  50 000c 0794     		str	r4, [sp, #28]
  51 000e 0894     		str	r4, [sp, #32]
  52 0010 0994     		str	r4, [sp, #36]
 328:Core/Src/main.c **** 
 329:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 330:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  53              		.loc 1 330 3 is_stmt 1 view .LVU3
  54              	.LBB4:
  55              		.loc 1 330 3 view .LVU4
  56              		.loc 1 330 3 view .LVU5
  57 0012 2F4B     		ldr	r3, .L3
  58 0014 DA6C     		ldr	r2, [r3, #76]
  59 0016 42F00402 		orr	r2, r2, #4
  60 001a DA64     		str	r2, [r3, #76]
  61              		.loc 1 330 3 view .LVU6
  62 001c DA6C     		ldr	r2, [r3, #76]
  63 001e 02F00402 		and	r2, r2, #4
  64 0022 0192     		str	r2, [sp, #4]
  65              		.loc 1 330 3 view .LVU7
  66 0024 019A     		ldr	r2, [sp, #4]
  67              	.LBE4:
  68              		.loc 1 330 3 view .LVU8
 331:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  69              		.loc 1 331 3 view .LVU9
ARM GAS  /tmp/cccm0VC1.s 			page 8


  70              	.LBB5:
  71              		.loc 1 331 3 view .LVU10
  72              		.loc 1 331 3 view .LVU11
  73 0026 DA6C     		ldr	r2, [r3, #76]
  74 0028 42F08002 		orr	r2, r2, #128
  75 002c DA64     		str	r2, [r3, #76]
  76              		.loc 1 331 3 view .LVU12
  77 002e DA6C     		ldr	r2, [r3, #76]
  78 0030 02F08002 		and	r2, r2, #128
  79 0034 0292     		str	r2, [sp, #8]
  80              		.loc 1 331 3 view .LVU13
  81 0036 029A     		ldr	r2, [sp, #8]
  82              	.LBE5:
  83              		.loc 1 331 3 view .LVU14
 332:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  84              		.loc 1 332 3 view .LVU15
  85              	.LBB6:
  86              		.loc 1 332 3 view .LVU16
  87              		.loc 1 332 3 view .LVU17
  88 0038 DA6C     		ldr	r2, [r3, #76]
  89 003a 42F00102 		orr	r2, r2, #1
  90 003e DA64     		str	r2, [r3, #76]
  91              		.loc 1 332 3 view .LVU18
  92 0040 DA6C     		ldr	r2, [r3, #76]
  93 0042 02F00102 		and	r2, r2, #1
  94 0046 0392     		str	r2, [sp, #12]
  95              		.loc 1 332 3 view .LVU19
  96 0048 039A     		ldr	r2, [sp, #12]
  97              	.LBE6:
  98              		.loc 1 332 3 view .LVU20
 333:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  99              		.loc 1 333 3 view .LVU21
 100              	.LBB7:
 101              		.loc 1 333 3 view .LVU22
 102              		.loc 1 333 3 view .LVU23
 103 004a DA6C     		ldr	r2, [r3, #76]
 104 004c 42F00202 		orr	r2, r2, #2
 105 0050 DA64     		str	r2, [r3, #76]
 106              		.loc 1 333 3 view .LVU24
 107 0052 DB6C     		ldr	r3, [r3, #76]
 108 0054 03F00203 		and	r3, r3, #2
 109 0058 0493     		str	r3, [sp, #16]
 110              		.loc 1 333 3 view .LVU25
 111 005a 049B     		ldr	r3, [sp, #16]
 112              	.LBE7:
 113              		.loc 1 333 3 view .LVU26
 334:Core/Src/main.c **** 
 335:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 336:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, row_0_Pin|row_1_Pin|row_2_Pin|row_3_Pin
 114              		.loc 1 336 3 view .LVU27
 115 005c 1D4F     		ldr	r7, .L3+4
 116 005e 2246     		mov	r2, r4
 117 0060 3F21     		movs	r1, #63
 118 0062 3846     		mov	r0, r7
 119 0064 FFF7FEFF 		bl	HAL_GPIO_WritePin
 120              	.LVL0:
 337:Core/Src/main.c ****                           |row_4_Pin|row_5_Pin, GPIO_PIN_RESET);
ARM GAS  /tmp/cccm0VC1.s 			page 9


 338:Core/Src/main.c **** 
 339:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, matrix_Pin, GPIO_PIN_SET);
 121              		.loc 1 339 3 view .LVU28
 122 0068 1B4D     		ldr	r5, .L3+8
 123 006a 0122     		movs	r2, #1
 124 006c 4FF48051 		mov	r1, #4096
 125 0070 2846     		mov	r0, r5
 126 0072 FFF7FEFF 		bl	HAL_GPIO_WritePin
 127              	.LVL1:
 340:Core/Src/main.c **** 
 341:Core/Src/main.c ****   /*Configure GPIO pins : col_13_Pin col_0_Pin col_1_Pin col_2_Pin
 342:Core/Src/main.c ****                            col_3_Pin col_4_Pin col_5_Pin col_6_Pin
 343:Core/Src/main.c ****                            col_7_Pin col_8_Pin col_9_Pin col_10_Pin
 344:Core/Src/main.c ****                            col_11_Pin col_12_Pin */
 345:Core/Src/main.c ****   GPIO_InitStruct.Pin = col_13_Pin|col_0_Pin|col_1_Pin|col_2_Pin
 128              		.loc 1 345 3 view .LVU29
 129              		.loc 1 345 23 is_stmt 0 view .LVU30
 130 0076 43F6FF73 		movw	r3, #16383
 131 007a 0593     		str	r3, [sp, #20]
 346:Core/Src/main.c ****                           |col_3_Pin|col_4_Pin|col_5_Pin|col_6_Pin
 347:Core/Src/main.c ****                           |col_7_Pin|col_8_Pin|col_9_Pin|col_10_Pin
 348:Core/Src/main.c ****                           |col_11_Pin|col_12_Pin;
 349:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 132              		.loc 1 349 3 is_stmt 1 view .LVU31
 133              		.loc 1 349 24 is_stmt 0 view .LVU32
 134 007c 0694     		str	r4, [sp, #24]
 350:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 135              		.loc 1 350 3 is_stmt 1 view .LVU33
 136              		.loc 1 350 24 is_stmt 0 view .LVU34
 137 007e 0226     		movs	r6, #2
 138 0080 0796     		str	r6, [sp, #28]
 351:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 139              		.loc 1 351 3 is_stmt 1 view .LVU35
 140 0082 DFF85880 		ldr	r8, .L3+12
 141 0086 05A9     		add	r1, sp, #20
 142 0088 4046     		mov	r0, r8
 143 008a FFF7FEFF 		bl	HAL_GPIO_Init
 144              	.LVL2:
 352:Core/Src/main.c **** 
 353:Core/Src/main.c ****   /*Configure GPIO pin : reset_radio_Pin */
 354:Core/Src/main.c ****   GPIO_InitStruct.Pin = reset_radio_Pin;
 145              		.loc 1 354 3 view .LVU36
 146              		.loc 1 354 23 is_stmt 0 view .LVU37
 147 008e 4FF40043 		mov	r3, #32768
 148 0092 0593     		str	r3, [sp, #20]
 355:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 149              		.loc 1 355 3 is_stmt 1 view .LVU38
 150              		.loc 1 355 24 is_stmt 0 view .LVU39
 151 0094 0694     		str	r4, [sp, #24]
 356:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 152              		.loc 1 356 3 is_stmt 1 view .LVU40
 153              		.loc 1 356 24 is_stmt 0 view .LVU41
 154 0096 0794     		str	r4, [sp, #28]
 357:Core/Src/main.c ****   HAL_GPIO_Init(reset_radio_GPIO_Port, &GPIO_InitStruct);
 155              		.loc 1 357 3 is_stmt 1 view .LVU42
 156 0098 05A9     		add	r1, sp, #20
 157 009a 4046     		mov	r0, r8
ARM GAS  /tmp/cccm0VC1.s 			page 10


 158 009c FFF7FEFF 		bl	HAL_GPIO_Init
 159              	.LVL3:
 358:Core/Src/main.c **** 
 359:Core/Src/main.c ****   /*Configure GPIO pins : row_0_Pin row_1_Pin row_2_Pin row_3_Pin
 360:Core/Src/main.c ****                            row_4_Pin row_5_Pin */
 361:Core/Src/main.c ****   GPIO_InitStruct.Pin = row_0_Pin|row_1_Pin|row_2_Pin|row_3_Pin
 160              		.loc 1 361 3 view .LVU43
 161              		.loc 1 361 23 is_stmt 0 view .LVU44
 162 00a0 3F23     		movs	r3, #63
 163 00a2 0593     		str	r3, [sp, #20]
 362:Core/Src/main.c ****                           |row_4_Pin|row_5_Pin;
 363:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 164              		.loc 1 363 3 is_stmt 1 view .LVU45
 165              		.loc 1 363 24 is_stmt 0 view .LVU46
 166 00a4 0124     		movs	r4, #1
 167 00a6 0694     		str	r4, [sp, #24]
 364:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLDOWN;
 168              		.loc 1 364 3 is_stmt 1 view .LVU47
 169              		.loc 1 364 24 is_stmt 0 view .LVU48
 170 00a8 0796     		str	r6, [sp, #28]
 365:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 171              		.loc 1 365 3 is_stmt 1 view .LVU49
 172              		.loc 1 365 25 is_stmt 0 view .LVU50
 173 00aa 0326     		movs	r6, #3
 174 00ac 0896     		str	r6, [sp, #32]
 366:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 175              		.loc 1 366 3 is_stmt 1 view .LVU51
 176 00ae 05A9     		add	r1, sp, #20
 177 00b0 3846     		mov	r0, r7
 178 00b2 FFF7FEFF 		bl	HAL_GPIO_Init
 179              	.LVL4:
 367:Core/Src/main.c **** 
 368:Core/Src/main.c ****   /*Configure GPIO pin : matrix_Pin */
 369:Core/Src/main.c ****   GPIO_InitStruct.Pin = matrix_Pin;
 180              		.loc 1 369 3 view .LVU52
 181              		.loc 1 369 23 is_stmt 0 view .LVU53
 182 00b6 4FF48053 		mov	r3, #4096
 183 00ba 0593     		str	r3, [sp, #20]
 370:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 184              		.loc 1 370 3 is_stmt 1 view .LVU54
 185              		.loc 1 370 24 is_stmt 0 view .LVU55
 186 00bc 0694     		str	r4, [sp, #24]
 371:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 187              		.loc 1 371 3 is_stmt 1 view .LVU56
 188              		.loc 1 371 24 is_stmt 0 view .LVU57
 189 00be 0794     		str	r4, [sp, #28]
 372:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 190              		.loc 1 372 3 is_stmt 1 view .LVU58
 191              		.loc 1 372 25 is_stmt 0 view .LVU59
 192 00c0 0896     		str	r6, [sp, #32]
 373:Core/Src/main.c ****   HAL_GPIO_Init(matrix_GPIO_Port, &GPIO_InitStruct);
 193              		.loc 1 373 3 is_stmt 1 view .LVU60
 194 00c2 05A9     		add	r1, sp, #20
 195 00c4 2846     		mov	r0, r5
 196 00c6 FFF7FEFF 		bl	HAL_GPIO_Init
 197              	.LVL5:
 374:Core/Src/main.c **** 
ARM GAS  /tmp/cccm0VC1.s 			page 11


 375:Core/Src/main.c **** }
 198              		.loc 1 375 1 is_stmt 0 view .LVU61
 199 00ca 0AB0     		add	sp, sp, #40
 200              	.LCFI2:
 201              		.cfi_def_cfa_offset 24
 202              		@ sp needed
 203 00cc BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 204              	.L4:
 205              		.align	2
 206              	.L3:
 207 00d0 00100240 		.word	1073876992
 208 00d4 00000242 		.word	1107427328
 209 00d8 00040242 		.word	1107428352
 210 00dc 00080242 		.word	1107429376
 211              		.cfi_endproc
 212              	.LFE162:
 214              		.section	.text.Error_Handler,"ax",%progbits
 215              		.align	1
 216              		.global	Error_Handler
 217              		.syntax unified
 218              		.thumb
 219              		.thumb_func
 221              	Error_Handler:
 222              	.LFB163:
 376:Core/Src/main.c **** 
 377:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 378:Core/Src/main.c **** 
 379:Core/Src/main.c **** /* USER CODE END 4 */
 380:Core/Src/main.c **** 
 381:Core/Src/main.c **** /**
 382:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 383:Core/Src/main.c ****   * @retval None
 384:Core/Src/main.c ****   */
 385:Core/Src/main.c **** void Error_Handler(void)
 386:Core/Src/main.c **** {
 223              		.loc 1 386 1 is_stmt 1 view -0
 224              		.cfi_startproc
 225              		@ Volatile: function does not return.
 226              		@ args = 0, pretend = 0, frame = 0
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228              		@ link register save eliminated.
 387:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 388:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 389:Core/Src/main.c ****   __disable_irq();
 229              		.loc 1 389 3 view .LVU63
 230              	.LBB8:
 231              	.LBI8:
 232              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
ARM GAS  /tmp/cccm0VC1.s 			page 12


  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/cccm0VC1.s 			page 13


  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cccm0VC1.s 			page 14


 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cccm0VC1.s 			page 15


 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 233              		.loc 2 207 27 view .LVU64
 234              	.LBB9:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 235              		.loc 2 209 3 view .LVU65
 236              		.syntax unified
 237              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 238 0000 72B6     		cpsid i
 239              	@ 0 "" 2
 240              		.thumb
 241              		.syntax unified
 242              	.L6:
 243              	.LBE9:
 244              	.LBE8:
 390:Core/Src/main.c ****   while (1)
 245              		.loc 1 390 3 discriminator 1 view .LVU66
 391:Core/Src/main.c ****   {
 392:Core/Src/main.c ****   }
 246              		.loc 1 392 3 discriminator 1 view .LVU67
 390:Core/Src/main.c ****   while (1)
 247              		.loc 1 390 9 discriminator 1 view .LVU68
 248 0002 FEE7     		b	.L6
 249              		.cfi_endproc
 250              	.LFE163:
 252              		.section	.text.MX_ICACHE_Init,"ax",%progbits
 253              		.align	1
 254              		.syntax unified
 255              		.thumb
 256              		.thumb_func
 258              	MX_ICACHE_Init:
ARM GAS  /tmp/cccm0VC1.s 			page 16


 259              	.LFB160:
 246:Core/Src/main.c **** 
 260              		.loc 1 246 1 view -0
 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 0
 263              		@ frame_needed = 0, uses_anonymous_args = 0
 264 0000 08B5     		push	{r3, lr}
 265              	.LCFI3:
 266              		.cfi_def_cfa_offset 8
 267              		.cfi_offset 3, -8
 268              		.cfi_offset 14, -4
 258:Core/Src/main.c ****   {
 269              		.loc 1 258 3 view .LVU70
 258:Core/Src/main.c ****   {
 270              		.loc 1 258 7 is_stmt 0 view .LVU71
 271 0002 0020     		movs	r0, #0
 272 0004 FFF7FEFF 		bl	HAL_ICACHE_ConfigAssociativityMode
 273              	.LVL6:
 258:Core/Src/main.c ****   {
 274              		.loc 1 258 6 view .LVU72
 275 0008 18B9     		cbnz	r0, .L11
 262:Core/Src/main.c ****   {
 276              		.loc 1 262 3 is_stmt 1 view .LVU73
 262:Core/Src/main.c ****   {
 277              		.loc 1 262 7 is_stmt 0 view .LVU74
 278 000a FFF7FEFF 		bl	HAL_ICACHE_Enable
 279              	.LVL7:
 262:Core/Src/main.c ****   {
 280              		.loc 1 262 6 view .LVU75
 281 000e 10B9     		cbnz	r0, .L12
 270:Core/Src/main.c **** 
 282              		.loc 1 270 1 view .LVU76
 283 0010 08BD     		pop	{r3, pc}
 284              	.L11:
 260:Core/Src/main.c ****   }
 285              		.loc 1 260 5 is_stmt 1 view .LVU77
 286 0012 FFF7FEFF 		bl	Error_Handler
 287              	.LVL8:
 288              	.L12:
 264:Core/Src/main.c ****   }
 289              		.loc 1 264 5 view .LVU78
 290 0016 FFF7FEFF 		bl	Error_Handler
 291              	.LVL9:
 292              		.cfi_endproc
 293              	.LFE160:
 295              		.section	.text.MX_I2C2_Init,"ax",%progbits
 296              		.align	1
 297              		.syntax unified
 298              		.thumb
 299              		.thumb_func
 301              	MX_I2C2_Init:
 302              	.LFB159:
 198:Core/Src/main.c **** 
 303              		.loc 1 198 1 view -0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 0
 306              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cccm0VC1.s 			page 17


 307 0000 08B5     		push	{r3, lr}
 308              	.LCFI4:
 309              		.cfi_def_cfa_offset 8
 310              		.cfi_offset 3, -8
 311              		.cfi_offset 14, -4
 207:Core/Src/main.c ****   hi2c2.Init.Timing = 0x10B0DCFB;
 312              		.loc 1 207 3 view .LVU80
 207:Core/Src/main.c ****   hi2c2.Init.Timing = 0x10B0DCFB;
 313              		.loc 1 207 18 is_stmt 0 view .LVU81
 314 0002 1348     		ldr	r0, .L21
 315 0004 134B     		ldr	r3, .L21+4
 316 0006 0360     		str	r3, [r0]
 208:Core/Src/main.c ****   hi2c2.Init.OwnAddress1 = 0;
 317              		.loc 1 208 3 is_stmt 1 view .LVU82
 208:Core/Src/main.c ****   hi2c2.Init.OwnAddress1 = 0;
 318              		.loc 1 208 21 is_stmt 0 view .LVU83
 319 0008 A3F13D53 		sub	r3, r3, #792723456
 320 000c A3F57723 		sub	r3, r3, #1011712
 321 0010 A3F60533 		subw	r3, r3, #2821
 322 0014 4360     		str	r3, [r0, #4]
 209:Core/Src/main.c ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 323              		.loc 1 209 3 is_stmt 1 view .LVU84
 209:Core/Src/main.c ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 324              		.loc 1 209 26 is_stmt 0 view .LVU85
 325 0016 0023     		movs	r3, #0
 326 0018 8360     		str	r3, [r0, #8]
 210:Core/Src/main.c ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 327              		.loc 1 210 3 is_stmt 1 view .LVU86
 210:Core/Src/main.c ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 328              		.loc 1 210 29 is_stmt 0 view .LVU87
 329 001a 0122     		movs	r2, #1
 330 001c C260     		str	r2, [r0, #12]
 211:Core/Src/main.c ****   hi2c2.Init.OwnAddress2 = 0;
 331              		.loc 1 211 3 is_stmt 1 view .LVU88
 211:Core/Src/main.c ****   hi2c2.Init.OwnAddress2 = 0;
 332              		.loc 1 211 30 is_stmt 0 view .LVU89
 333 001e 0361     		str	r3, [r0, #16]
 212:Core/Src/main.c ****   hi2c2.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 334              		.loc 1 212 3 is_stmt 1 view .LVU90
 212:Core/Src/main.c ****   hi2c2.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 335              		.loc 1 212 26 is_stmt 0 view .LVU91
 336 0020 4361     		str	r3, [r0, #20]
 213:Core/Src/main.c ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 337              		.loc 1 213 3 is_stmt 1 view .LVU92
 213:Core/Src/main.c ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 338              		.loc 1 213 31 is_stmt 0 view .LVU93
 339 0022 8361     		str	r3, [r0, #24]
 214:Core/Src/main.c ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 340              		.loc 1 214 3 is_stmt 1 view .LVU94
 214:Core/Src/main.c ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 341              		.loc 1 214 30 is_stmt 0 view .LVU95
 342 0024 C361     		str	r3, [r0, #28]
 215:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 343              		.loc 1 215 3 is_stmt 1 view .LVU96
 215:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 344              		.loc 1 215 28 is_stmt 0 view .LVU97
 345 0026 0362     		str	r3, [r0, #32]
ARM GAS  /tmp/cccm0VC1.s 			page 18


 216:Core/Src/main.c ****   {
 346              		.loc 1 216 3 is_stmt 1 view .LVU98
 216:Core/Src/main.c ****   {
 347              		.loc 1 216 7 is_stmt 0 view .LVU99
 348 0028 FFF7FEFF 		bl	HAL_I2C_Init
 349              	.LVL10:
 216:Core/Src/main.c ****   {
 350              		.loc 1 216 6 view .LVU100
 351 002c 50B9     		cbnz	r0, .L18
 223:Core/Src/main.c ****   {
 352              		.loc 1 223 3 is_stmt 1 view .LVU101
 223:Core/Src/main.c ****   {
 353              		.loc 1 223 7 is_stmt 0 view .LVU102
 354 002e 0021     		movs	r1, #0
 355 0030 0748     		ldr	r0, .L21
 356 0032 FFF7FEFF 		bl	HAL_I2CEx_ConfigAnalogFilter
 357              	.LVL11:
 223:Core/Src/main.c ****   {
 358              		.loc 1 223 6 view .LVU103
 359 0036 38B9     		cbnz	r0, .L19
 230:Core/Src/main.c ****   {
 360              		.loc 1 230 3 is_stmt 1 view .LVU104
 230:Core/Src/main.c ****   {
 361              		.loc 1 230 7 is_stmt 0 view .LVU105
 362 0038 0021     		movs	r1, #0
 363 003a 0548     		ldr	r0, .L21
 364 003c FFF7FEFF 		bl	HAL_I2CEx_ConfigDigitalFilter
 365              	.LVL12:
 230:Core/Src/main.c ****   {
 366              		.loc 1 230 6 view .LVU106
 367 0040 20B9     		cbnz	r0, .L20
 238:Core/Src/main.c **** 
 368              		.loc 1 238 1 view .LVU107
 369 0042 08BD     		pop	{r3, pc}
 370              	.L18:
 218:Core/Src/main.c ****   }
 371              		.loc 1 218 5 is_stmt 1 view .LVU108
 372 0044 FFF7FEFF 		bl	Error_Handler
 373              	.LVL13:
 374              	.L19:
 225:Core/Src/main.c ****   }
 375              		.loc 1 225 5 view .LVU109
 376 0048 FFF7FEFF 		bl	Error_Handler
 377              	.LVL14:
 378              	.L20:
 232:Core/Src/main.c ****   }
 379              		.loc 1 232 5 view .LVU110
 380 004c FFF7FEFF 		bl	Error_Handler
 381              	.LVL15:
 382              	.L22:
 383              		.align	2
 384              	.L21:
 385 0050 00000000 		.word	hi2c2
 386 0054 00580040 		.word	1073764352
 387              		.cfi_endproc
 388              	.LFE159:
 390              		.section	.text.SystemClock_Config,"ax",%progbits
ARM GAS  /tmp/cccm0VC1.s 			page 19


 391              		.align	1
 392              		.global	SystemClock_Config
 393              		.syntax unified
 394              		.thumb
 395              		.thumb_func
 397              	SystemClock_Config:
 398              	.LFB157:
 101:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 399              		.loc 1 101 1 view -0
 400              		.cfi_startproc
 401              		@ args = 0, pretend = 0, frame = 96
 402              		@ frame_needed = 0, uses_anonymous_args = 0
 403 0000 00B5     		push	{lr}
 404              	.LCFI5:
 405              		.cfi_def_cfa_offset 4
 406              		.cfi_offset 14, -4
 407 0002 99B0     		sub	sp, sp, #100
 408              	.LCFI6:
 409              		.cfi_def_cfa_offset 104
 102:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 410              		.loc 1 102 3 view .LVU112
 102:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 411              		.loc 1 102 22 is_stmt 0 view .LVU113
 412 0004 4822     		movs	r2, #72
 413 0006 0021     		movs	r1, #0
 414 0008 06A8     		add	r0, sp, #24
 415 000a FFF7FEFF 		bl	memset
 416              	.LVL16:
 103:Core/Src/main.c **** 
 417              		.loc 1 103 3 is_stmt 1 view .LVU114
 103:Core/Src/main.c **** 
 418              		.loc 1 103 22 is_stmt 0 view .LVU115
 419 000e 0020     		movs	r0, #0
 420 0010 0190     		str	r0, [sp, #4]
 421 0012 0290     		str	r0, [sp, #8]
 422 0014 0390     		str	r0, [sp, #12]
 423 0016 0490     		str	r0, [sp, #16]
 424 0018 0590     		str	r0, [sp, #20]
 107:Core/Src/main.c ****   {
 425              		.loc 1 107 3 is_stmt 1 view .LVU116
 107:Core/Src/main.c ****   {
 426              		.loc 1 107 7 is_stmt 0 view .LVU117
 427 001a FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 428              	.LVL17:
 107:Core/Src/main.c ****   {
 429              		.loc 1 107 6 view .LVU118
 430 001e 20BB     		cbnz	r0, .L28
 115:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 431              		.loc 1 115 3 is_stmt 1 view .LVU119
 115:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 432              		.loc 1 115 36 is_stmt 0 view .LVU120
 433 0020 0123     		movs	r3, #1
 434 0022 0693     		str	r3, [sp, #24]
 116:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 435              		.loc 1 116 3 is_stmt 1 view .LVU121
 116:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 436              		.loc 1 116 30 is_stmt 0 view .LVU122
ARM GAS  /tmp/cccm0VC1.s 			page 20


 437 0024 4FF48033 		mov	r3, #65536
 438 0028 0793     		str	r3, [sp, #28]
 117:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 439              		.loc 1 117 3 is_stmt 1 view .LVU123
 117:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 440              		.loc 1 117 34 is_stmt 0 view .LVU124
 441 002a 0223     		movs	r3, #2
 442 002c 1193     		str	r3, [sp, #68]
 118:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 2;
 443              		.loc 1 118 3 is_stmt 1 view .LVU125
 118:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 2;
 444              		.loc 1 118 35 is_stmt 0 view .LVU126
 445 002e 0322     		movs	r2, #3
 446 0030 1292     		str	r2, [sp, #72]
 119:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 12;
 447              		.loc 1 119 3 is_stmt 1 view .LVU127
 119:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 12;
 448              		.loc 1 119 30 is_stmt 0 view .LVU128
 449 0032 1393     		str	r3, [sp, #76]
 120:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 450              		.loc 1 120 3 is_stmt 1 view .LVU129
 120:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 451              		.loc 1 120 30 is_stmt 0 view .LVU130
 452 0034 0C22     		movs	r2, #12
 453 0036 1492     		str	r2, [sp, #80]
 121:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 454              		.loc 1 121 3 is_stmt 1 view .LVU131
 121:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 455              		.loc 1 121 30 is_stmt 0 view .LVU132
 456 0038 0722     		movs	r2, #7
 457 003a 1592     		str	r2, [sp, #84]
 122:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 458              		.loc 1 122 3 is_stmt 1 view .LVU133
 122:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 459              		.loc 1 122 30 is_stmt 0 view .LVU134
 460 003c 1693     		str	r3, [sp, #88]
 123:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 461              		.loc 1 123 3 is_stmt 1 view .LVU135
 123:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 462              		.loc 1 123 30 is_stmt 0 view .LVU136
 463 003e 1793     		str	r3, [sp, #92]
 124:Core/Src/main.c ****   {
 464              		.loc 1 124 3 is_stmt 1 view .LVU137
 124:Core/Src/main.c ****   {
 465              		.loc 1 124 7 is_stmt 0 view .LVU138
 466 0040 06A8     		add	r0, sp, #24
 467 0042 FFF7FEFF 		bl	HAL_RCC_OscConfig
 468              	.LVL18:
 124:Core/Src/main.c ****   {
 469              		.loc 1 124 6 view .LVU139
 470 0046 90B9     		cbnz	r0, .L29
 131:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 471              		.loc 1 131 3 is_stmt 1 view .LVU140
 131:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 472              		.loc 1 131 31 is_stmt 0 view .LVU141
 473 0048 0F23     		movs	r3, #15
 474 004a 0193     		str	r3, [sp, #4]
ARM GAS  /tmp/cccm0VC1.s 			page 21


 133:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 475              		.loc 1 133 3 is_stmt 1 view .LVU142
 133:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 476              		.loc 1 133 34 is_stmt 0 view .LVU143
 477 004c 0323     		movs	r3, #3
 478 004e 0293     		str	r3, [sp, #8]
 134:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 479              		.loc 1 134 3 is_stmt 1 view .LVU144
 134:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 480              		.loc 1 134 35 is_stmt 0 view .LVU145
 481 0050 0023     		movs	r3, #0
 482 0052 0393     		str	r3, [sp, #12]
 135:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 483              		.loc 1 135 3 is_stmt 1 view .LVU146
 135:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 484              		.loc 1 135 36 is_stmt 0 view .LVU147
 485 0054 0493     		str	r3, [sp, #16]
 136:Core/Src/main.c **** 
 486              		.loc 1 136 3 is_stmt 1 view .LVU148
 136:Core/Src/main.c **** 
 487              		.loc 1 136 36 is_stmt 0 view .LVU149
 488 0056 0593     		str	r3, [sp, #20]
 138:Core/Src/main.c ****   {
 489              		.loc 1 138 3 is_stmt 1 view .LVU150
 138:Core/Src/main.c ****   {
 490              		.loc 1 138 7 is_stmt 0 view .LVU151
 491 0058 0421     		movs	r1, #4
 492 005a 0DEB0100 		add	r0, sp, r1
 493 005e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 494              	.LVL19:
 138:Core/Src/main.c ****   {
 495              		.loc 1 138 6 view .LVU152
 496 0062 30B9     		cbnz	r0, .L30
 142:Core/Src/main.c **** 
 497              		.loc 1 142 1 view .LVU153
 498 0064 19B0     		add	sp, sp, #100
 499              	.LCFI7:
 500              		.cfi_remember_state
 501              		.cfi_def_cfa_offset 4
 502              		@ sp needed
 503 0066 5DF804FB 		ldr	pc, [sp], #4
 504              	.L28:
 505              	.LCFI8:
 506              		.cfi_restore_state
 109:Core/Src/main.c ****   }
 507              		.loc 1 109 5 is_stmt 1 view .LVU154
 508 006a FFF7FEFF 		bl	Error_Handler
 509              	.LVL20:
 510              	.L29:
 126:Core/Src/main.c ****   }
 511              		.loc 1 126 5 view .LVU155
 512 006e FFF7FEFF 		bl	Error_Handler
 513              	.LVL21:
 514              	.L30:
 140:Core/Src/main.c ****   }
 515              		.loc 1 140 5 view .LVU156
 516 0072 FFF7FEFF 		bl	Error_Handler
ARM GAS  /tmp/cccm0VC1.s 			page 22


 517              	.LVL22:
 518              		.cfi_endproc
 519              	.LFE157:
 521              		.section	.text.main,"ax",%progbits
 522              		.align	1
 523              		.global	main
 524              		.syntax unified
 525              		.thumb
 526              		.thumb_func
 528              	main:
 529              	.LFB156:
  55:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 530              		.loc 1 55 1 view -0
 531              		.cfi_startproc
 532              		@ Volatile: function does not return.
 533              		@ args = 0, pretend = 0, frame = 0
 534              		@ frame_needed = 0, uses_anonymous_args = 0
 535 0000 08B5     		push	{r3, lr}
 536              	.LCFI9:
 537              		.cfi_def_cfa_offset 8
 538              		.cfi_offset 3, -8
 539              		.cfi_offset 14, -4
  59:Core/Src/main.c **** 
 540              		.loc 1 59 3 view .LVU158
 541 0002 FFF7FEFF 		bl	HAL_Init
 542              	.LVL23:
  62:Core/Src/main.c **** 
 543              		.loc 1 62 3 view .LVU159
 544 0006 FFF7FEFF 		bl	SystemClock_Config
 545              	.LVL24:
  77:Core/Src/main.c ****   MX_ICACHE_Init();
 546              		.loc 1 77 3 view .LVU160
 547 000a FFF7FEFF 		bl	MX_GPIO_Init
 548              	.LVL25:
  78:Core/Src/main.c ****   // MX_I2C1_Init();
 549              		.loc 1 78 3 view .LVU161
 550 000e FFF7FEFF 		bl	MX_ICACHE_Init
 551              	.LVL26:
  80:Core/Src/main.c ****   // MX_USART3_UART_Init();
 552              		.loc 1 80 3 view .LVU162
 553 0012 FFF7FEFF 		bl	MX_I2C2_Init
 554              	.LVL27:
  82:Core/Src/main.c **** 
 555              		.loc 1 82 3 view .LVU163
 556 0016 FFF7FEFF 		bl	MX_USB_Device_Init
 557              	.LVL28:
  85:Core/Src/main.c ****   IS31FL3737_init(191);
 558              		.loc 1 85 3 view .LVU164
 559 001a A120     		movs	r0, #161
 560 001c FFF7FEFF 		bl	IS31FL3737_init
 561              	.LVL29:
  86:Core/Src/main.c **** 
 562              		.loc 1 86 3 view .LVU165
 563 0020 BF20     		movs	r0, #191
 564 0022 FFF7FEFF 		bl	IS31FL3737_init
 565              	.LVL30:
 566              	.L32:
ARM GAS  /tmp/cccm0VC1.s 			page 23


  89:Core/Src/main.c ****   {
 567              		.loc 1 89 3 discriminator 1 view .LVU166
  91:Core/Src/main.c ****     IS31FL3737_update_pwm_buffers(161, 191);
 568              		.loc 1 91 5 discriminator 1 view .LVU167
 569 0026 FFF7FEFF 		bl	scan_matrix
 570              	.LVL31:
  92:Core/Src/main.c ****   }
 571              		.loc 1 92 5 discriminator 1 view .LVU168
 572 002a BF21     		movs	r1, #191
 573 002c A120     		movs	r0, #161
 574 002e FFF7FEFF 		bl	IS31FL3737_update_pwm_buffers
 575              	.LVL32:
  89:Core/Src/main.c ****   {
 576              		.loc 1 89 9 discriminator 1 view .LVU169
 577 0032 F8E7     		b	.L32
 578              		.cfi_endproc
 579              	.LFE156:
 581              		.global	huart3
 582              		.section	.bss.huart3,"aw",%nobits
 583              		.align	2
 586              	huart3:
 587 0000 00000000 		.space	148
 587      00000000 
 587      00000000 
 587      00000000 
 587      00000000 
 588              		.global	hi2c2
 589              		.section	.bss.hi2c2,"aw",%nobits
 590              		.align	2
 593              	hi2c2:
 594 0000 00000000 		.space	84
 594      00000000 
 594      00000000 
 594      00000000 
 594      00000000 
 595              		.global	hi2c1
 596              		.section	.bss.hi2c1,"aw",%nobits
 597              		.align	2
 600              	hi2c1:
 601 0000 00000000 		.space	84
 601      00000000 
 601      00000000 
 601      00000000 
 601      00000000 
 602              		.text
 603              	.Letext0:
 604              		.file 3 "/home/yul/toolchain/arm-gnu-toolchain-12.2.rel1-x86_64-arm-none-eabi/arm-none-eabi/includ
 605              		.file 4 "/home/yul/toolchain/arm-gnu-toolchain-12.2.rel1-x86_64-arm-none-eabi/arm-none-eabi/includ
 606              		.file 5 "Drivers/CMSIS/Device/ST/STM32L5xx/Include/stm32l562xx.h"
 607              		.file 6 "Drivers/STM32L5xx_HAL_Driver/Inc/stm32l5xx_hal_def.h"
 608              		.file 7 "Drivers/STM32L5xx_HAL_Driver/Inc/stm32l5xx_hal_rcc.h"
 609              		.file 8 "Drivers/STM32L5xx_HAL_Driver/Inc/stm32l5xx_hal_gpio.h"
 610              		.file 9 "Drivers/STM32L5xx_HAL_Driver/Inc/stm32l5xx_hal_dma.h"
 611              		.file 10 "Drivers/STM32L5xx_HAL_Driver/Inc/stm32l5xx_hal_i2c.h"
 612              		.file 11 "Drivers/STM32L5xx_HAL_Driver/Inc/stm32l5xx_hal_uart.h"
 613              		.file 12 "Drivers/STM32L5xx_HAL_Driver/Inc/stm32l5xx_hal_pwr_ex.h"
 614              		.file 13 "Drivers/STM32L5xx_HAL_Driver/Inc/stm32l5xx_hal_i2c_ex.h"
ARM GAS  /tmp/cccm0VC1.s 			page 24


 615              		.file 14 "Drivers/STM32L5xx_HAL_Driver/Inc/stm32l5xx_hal_icache.h"
 616              		.file 15 "Core/Inc/is31fl3737.h"
 617              		.file 16 "Drivers/STM32L5xx_HAL_Driver/Inc/stm32l5xx_hal.h"
 618              		.file 17 "Core/Inc/keyboard.h"
 619              		.file 18 "<built-in>"
ARM GAS  /tmp/cccm0VC1.s 			page 25


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cccm0VC1.s:22     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/cccm0VC1.s:27     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/cccm0VC1.s:207    .text.MX_GPIO_Init:00000000000000d0 $d
     /tmp/cccm0VC1.s:215    .text.Error_Handler:0000000000000000 $t
     /tmp/cccm0VC1.s:221    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/cccm0VC1.s:253    .text.MX_ICACHE_Init:0000000000000000 $t
     /tmp/cccm0VC1.s:258    .text.MX_ICACHE_Init:0000000000000000 MX_ICACHE_Init
     /tmp/cccm0VC1.s:296    .text.MX_I2C2_Init:0000000000000000 $t
     /tmp/cccm0VC1.s:301    .text.MX_I2C2_Init:0000000000000000 MX_I2C2_Init
     /tmp/cccm0VC1.s:385    .text.MX_I2C2_Init:0000000000000050 $d
     /tmp/cccm0VC1.s:593    .bss.hi2c2:0000000000000000 hi2c2
     /tmp/cccm0VC1.s:391    .text.SystemClock_Config:0000000000000000 $t
     /tmp/cccm0VC1.s:397    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cccm0VC1.s:522    .text.main:0000000000000000 $t
     /tmp/cccm0VC1.s:528    .text.main:0000000000000000 main
     /tmp/cccm0VC1.s:586    .bss.huart3:0000000000000000 huart3
     /tmp/cccm0VC1.s:583    .bss.huart3:0000000000000000 $d
     /tmp/cccm0VC1.s:590    .bss.hi2c2:0000000000000000 $d
     /tmp/cccm0VC1.s:600    .bss.hi2c1:0000000000000000 hi2c1
     /tmp/cccm0VC1.s:597    .bss.hi2c1:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_ICACHE_ConfigAssociativityMode
HAL_ICACHE_Enable
HAL_I2C_Init
HAL_I2CEx_ConfigAnalogFilter
HAL_I2CEx_ConfigDigitalFilter
memset
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_USB_Device_Init
IS31FL3737_init
scan_matrix
IS31FL3737_update_pwm_buffers
